{"version":3,"sources":["components/Forms/Input/style/Input.module.scss","components/Search/Search.module.scss","pages/styles/CountryPage.module.scss","styles/App.module.scss","pages/AdminPage/styles/AdminPage.module.scss","hooks/useAuth.js","context/AppContext.js","pages/MainPage/CountryCard.js","pages/MainPage/MainPage.js","hooks/useHttp.js","components/Map/Map.js","components/Map/mapFunction.js","components/Currency/Currency.js","components/Video/Video.js","components/Sliders/slider.js","components/Sliders/sight.modal.js","components/Rating/RatingStars.js","components/RateCard/RateCard.js","components/Sliders/sight.gallery.js","components/weather/weather.js","components/Clock/Ð¡lock.js","pages/CountryPage.js","components/Buttons/Button.js","components/Forms/Input/Input.js","components/Forms/AuthForm.js","pages/AuthPage.js","pages/UserPage.js","components/Navigation/NavBar.js","components/Navigation/UserBar.js","components/Tabs/TabPanel.tsx","components/Tabs/VerticalTabs.js","pages/AdminPage/CountryAddForm.js","components/Forms/Textarea.js","components/Structs/Column.js","components/Structs/Row.js","components/Forms/Blocks/SliderForm/SliderForm.js","components/Forms/Blocks/SliderForm/SliderGallery.js","components/Forms/Blocks/Select.js","components/Forms/Blocks/SelectCountry.js","pages/AdminPage/CountryPageForm.js","helpers/struct.js","pages/AdminPage/ShowplaceRepeater/ShowplaceRepeater.js","pages/AdminPage/ShowplaceAddForm.js","pages/AdminPage/AdminPage.js","components/Search/Search.js","components/SelectLanguage/SelectLanguage.js","images/rs_school_js.svg","App.js","reportWebVitals.js","index.js","pages/styles/AuthPage.module.scss","pages/AdminPage/ShowplaceRepeater/ShowplaceRepeater.module.scss","components/Forms/Blocks/SliderForm/SliderForm.module.scss","components/Sliders/Slider.module.scss","components/RateCard/RateCard.module.scss","pages/MainPage/styles/MainPage.module.scss","components/Structs/styles/Structs.module.scss"],"names":["module","exports","authStorageName","AppContext","createContext","token","userId","login","logout","isAuthenticated","language","CountryCard","name","capital","preview","to","style","hoverHandler","backgroundImage","backgroundSize","capitalStringStyle","length","fontSize","className","classesCss","withRouter","countries","searchValue","setSearchExists","countryResponse","isSearching","setIsSearching","history","indexOfLang","langs","indexOf","map","country","Object","assign","langData","linkName","countryName","useEffect","exists","MainPage","filteredCountries","filter","toLowerCase","includes","capitalName","index","push","replace","engName","filterCountries","useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","urlAddon","fetch","response","json","data","ok","console","log","message","clearError","useCountries","setResponse","countryAsyncRequest","requestResponse","cLoading","cError","getCountryFromBase","promiseResponse","Map","capitalCoordinates","countryCoordinates","countryCode","capitals","mapClassName","mapContainer","useRef","useContext","features","find","properties","ISO_A2","geometry","coordinates","CountryCode","CapitalLongitude","CapitalLatitude","CountryName","mapboxgl","accessToken","container","current","center","zoom","nav","NavigationControl","showCompass","showZoom","el","document","createElement","Marker","setLngLat","addTo","addControl","FullscreenControl","on","setLayoutProperty","toLocaleLowerCase","addLayer","id","type","source","paint","colorBoundaries","remove","join","ref","Currency","classes","time_last_update_unix","currentCurrency","setCurrency","codeMap","FR","currency","currencyTitle","CH","IS","NZ","NO","TH","PH","HR","BR","LK","JP","textMap","title","dollar","euro","ruble","countryCurrency","getData","then","res","result","wrap","currencyName","currencyVal","conversion_rates","USD","EUR","RUB","Video","video","opts","playerVars","autoplay","rel","modestbranding","hl","videoId","EN","RU","Slider","slides","slidesPerView","loop","delay","disableOnInteraction","effect","slide","Slide","file","SwiperCore","use","Navigation","EffectFade","Autoplay","ModalWindow","props","translation","Modal","open","isOpened","disableBackdropClick","disableEscapeKeyDown","aria-labelledby","aria-describedby","onClose","spaceBetween","centeredSlides","navigation","initialSlide","content","e","i","src","fullPhoto","alt","height","description","RatingStars","place","showRateCard","stars","Array","fill","starColor","color","starSet","setStarSet","userMark","setUserMark","averageRate","Math","floor","rate","rating","setRating","changeStars","newStarsSet","star","ratingSaveHandler","onStarClick","preventDefault","stopPropagation","starId","currentTarget","showplace","_id","user","value","Number","newRate","onHover","target","onMouseLeave","currentUserMark","icon","EmptyStar","SolidStar","onMouseEnter","onClick","RateCard","record","RateRecord","Avatar","toUpperCase","email","userImage","UserName","Rate","SightGallery","places","visibility","modalState","setModalState","rateMap","setRateMap","currentRateCard","setCurrentRateCard","getLangIndex","langSet","findIndex","langItem","lang","placesId","showStyle","showObject","ShowplaceSlide","prevPhoto","ShortDescription","shortDescription","Rating","RateNumber","Pagination","Weather","city","API_KEY","weatherObject","setWeatherObject","humidity","wind","temperature","main","temp","toFixed","weatherDescription","weather","slice","speedWind","speed","weatherIcon","getWeater","ShowTime","date","setDate","currentCity","weekDate","Date","toLocaleDateString","weekday","year","month","day","currentUTC","addZero","n","parseInt","interval","setInterval","today","isArray","setTime","getTime","hour","getUTCHours","min","getUTCMinutes","sec","getSeconds","clearInterval","timeClassName","dateClassName","CountryPage","updateSearch","countriesData","Countries","capitalsData","Capitals","key","window","scrollTo","currentLangData","SlideContainer","countryPhotos","CountryWelcome","Country","Capital","CapitalName","CapitalTime","Time","CountryWidgets","WeatherWidget","WeatherIcon","WeatherTemperature","CurrencyWidget","CurrencyValue","CurrencyName","ShowplacesContainer","showplaces","InfoContainer","MapContainer","Description","DescText","VideoBlock","Button","label","disabled","Input","onChange","placeholder","dataAttr","blockStyle","autoComplete","InputBlock","dataProps","attrName","hasOwnProperty","htmlFor","AuthForm","loginHandler","signUpHandler","waitCondition","langExtraData","password","form","setForm","changeHandler","event","FormMessage","logIn","AuthInput","AuthButtonSet","signInConfirm","SignInButton","FormButton","signUpConfirm","SignUpButton","setMessage","auth","userData","requestHandler","AuthPage","image","setImage","setName","onSendHandler","formData","FormData","append","Axios","post","newData","updData","updateData","UserPage","NameInput","maxNumber","dataURLKey","imageList","onImageUpload","onImageUpdate","onImageRemove","isDragging","dragProps","ImageLoadButton","undefined","width","ImageHandler","SaveButton","NavBar","children","UserBar","logoutVisibility","setLogoutVisibility","Consumer","isActive","match","avatar","logButton","logOut","signIn","TabPanel","other","display","role","hidden","useStyles","makeStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","tabs","borderRight","divider","VerticalTabs","setValue","TabLabels","TabsContent","child","Tab","a11yProps","React","cloneElement","Tabs","minWidth","orientation","variant","newValue","aria-label","countryData","CountryAddForm","sendHandler","removeHandler","countriesCodes","code","confirm","removeButtonHandler","Textarea","rows","Column","Row","SliderForm","onChangeHandler","changeData","dataset","AddButton","splice","slideIndex","SliderWrap","RemoveButton","onRemoveHandler","SliderGallery","Select","options","optionsArr","option","random","SelectCountry","codes","CountryPageForm","keys","currencyCode","countriesDataState","setCountriesData","updateForm","langDataChangeHandler","newCountriesData","commonDataChangeHandler","coordinate","currentCountry","currentCountryLang","FormColumn","marginBottom","flexDirection","shortText","FormRow","CountryPreview","photos","dummyLang","countryRate","destructCountry","countryDataFromClient","dummy","countryStructure","dummyKey","ShowplaceRepeater","addHandler","currentLang","checkValue","langIndex","Item","PreviewEditor","FullEditor","data-index","data-id","ShowplaceAddForm","full","updateStack","updatesCounter","localShowplaces","setLocalShowplaces","showplacesFull","showplacesUpdateStack","localCounter","showplaceDummy","unshift","currentShowplace","checkShowplace","updateStackHandler","indexToRemove","indexToRemoveFromStack","stackShowplace","AdminPage","setCountries","addCountryHandler","countriesUpd","updateCountryHandler","sendShowplacesHandler","placesStack","requestQueue","forEach","stackItem","updatedShowplace","sendRes","getRes","removeCountryHandler","localCountriesUpdate","struct","countriesDataFromServer","structure","countryLangData","structCountries","FormStyle1","Search","placeholderValue","buttonStyle","opacity","transition","onSubmit","searchButton","faSearch","autoFocus","onKeyDown","closeButton","TimesSymbol","xmlns","viewBox","stroke","strokeWidth","strokeLinecap","d","SelectLanguage","setLanguage","val","localStorage","setItem","searchable","selectControl","control","selectMenuOuter","dropdown","selectInput","input","selectPlaceholder","App","setToken","setUserId","setUserData","jwtToken","removeItem","newState","currentUserData","parse","getItem","useAuth","searchbarState","setSearchbarState","update","getCountryPathName","engIndex","Provider","Body","SiteNavBar","LogoLink","exact","Logo","SearchBar","SearchButton","CloseButton","menuItem","LangMenuItem","LangMenuDropdown","LangMenuControl","LogButton","SiteContent","path","Footer","href","FooterDate","FooterLogo","logo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","application","basename","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6ce959e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputBlock\":\"Input_InputBlock__1WiFD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TimesSymbol\":\"Search_TimesSymbol__d0Lz4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CountryPage\":\"CountryPage_CountryPage__1i7XQ\",\"SlideContainer\":\"CountryPage_SlideContainer__X2vh-\",\"CountryWelcome\":\"CountryPage_CountryWelcome__2nIBX\",\"Country\":\"CountryPage_Country__3K9Ma\",\"Capital\":\"CountryPage_Capital__2spz2\",\"CapitalName\":\"CountryPage_CapitalName__3BHL5\",\"CapitalTime\":\"CountryPage_CapitalTime__3tP0b\",\"Time\":\"CountryPage_Time__2-3Ty\",\"Date\":\"CountryPage_Date__1AJM-\",\"CountryWidgets\":\"CountryPage_CountryWidgets__1hqrc\",\"WeatherWidget\":\"CountryPage_WeatherWidget__2gNLa\",\"WeatherTemperature\":\"CountryPage_WeatherTemperature__258zs\",\"WeatherIcon\":\"CountryPage_WeatherIcon__1y_rj\",\"CurrencyWidget\":\"CountryPage_CurrencyWidget__2ieUi\",\"CurrencyValue\":\"CountryPage_CurrencyValue__1UeLw\",\"ShowplacesContainer\":\"CountryPage_ShowplacesContainer__KL4qe\",\"InfoContainer\":\"CountryPage_InfoContainer__2kS-M\",\"MapContainer\":\"CountryPage_MapContainer__puR1z\",\"Map\":\"CountryPage_Map__2Vl4r\",\"Description\":\"CountryPage_Description__2eleP\",\"VideoBlock\":\"CountryPage_VideoBlock__TZl6s\",\"DescText\":\"CountryPage_DescText__rJcUg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Body\":\"App_Body__3GDxS\",\"SiteNavBar\":\"App_SiteNavBar__9cl4Z\",\"HiddenMenu\":\"App_HiddenMenu__2U3RX\",\"UserBar\":\"App_UserBar__2U6zT\",\"LogButton\":\"App_LogButton__3X-gG\",\"slide-border\":\"App_slide-border__2vTTP\",\"Avatar\":\"App_Avatar__2TeLh\",\"SearchBar\":\"App_SearchBar__1t6XQ\",\"CloseButton\":\"App_CloseButton__FiKaO\",\"SearchButton\":\"App_SearchButton__3kGHp\",\"SelectLanguage\":\"App_SelectLanguage__2f79P\",\"LangMenuControl\":\"App_LangMenuControl__ZZ170\",\"LangMenuDropdown\":\"App_LangMenuDropdown__1nbmG\",\"SiteContent\":\"App_SiteContent__2jrpx\",\"LogoLink\":\"App_LogoLink__Zp3V8\",\"Logo\":\"App_Logo__1QHAG\",\"Footer\":\"App_Footer__snMpH\",\"FooterDate\":\"App_FooterDate__PeV0O\",\"FooterLogo\":\"App_FooterLogo__363L_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AdminPage\":\"AdminPage_AdminPage__3ZvtP\",\"FormStyle1\":\"AdminPage_FormStyle1__28VIQ\",\"FormRow\":\"AdminPage_FormRow__21fuM\",\"Description\":\"AdminPage_Description__1l_zY\",\"CountryPreview\":\"AdminPage_CountryPreview__2Pfts\"};","import {useState, useCallback, useEffect} from 'react'\r\n\r\nconst authStorageName = 'authData'\r\n\r\nexport const useAuth = () => {\r\n    const [token, setToken] = useState(null)\r\n    const [userId, setUserId] = useState(null)\r\n    const [userData, setUserData] = useState(null)\r\n\r\n    const login = useCallback((jwtToken, user) => {\r\n        setToken(jwtToken)\r\n        setUserId(user.id)\r\n        setUserData({\r\n            name:user.name,\r\n            image:user.image,\r\n            email: user.email,\r\n        })\r\n        localStorage.setItem( authStorageName, JSON.stringify({\r\n            userId: user.id,\r\n            token: jwtToken,\r\n            name: user.name,\r\n            image: user.image,\r\n            email: user.email\r\n        }))\r\n    }, [])\r\n\r\n    const logout = useCallback(() => {\r\n        setToken(null)\r\n        setUserId(null)\r\n        setUserData(null)\r\n        localStorage.removeItem(authStorageName)\r\n    }, [])\r\n\r\n    const updateData = useCallback((newData) => {\r\n        const newState = {...userData, ...newData}\r\n        const currentUserData = JSON.parse(localStorage.getItem(authStorageName))\r\n        localStorage.setItem( authStorageName, JSON.stringify({\r\n            ...currentUserData,\r\n            userImage: newState.image,\r\n            name: newState.name\r\n        }))\r\n        setUserData(newState)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const userData = JSON.parse(localStorage.getItem(authStorageName))\r\n        if(userData?.token){\r\n            login(userData.token, {...userData, id: userData.userId})\r\n        }\r\n    }, [login])\r\n\r\n    return {login, logout, token, userId, userData, updateData}\r\n}","import {createContext} from 'react'\r\n\r\nexport const AppContext = createContext({\r\n    token: null,\r\n    userId: null,\r\n    login: () => {},\r\n    logout: () => {},\r\n    isAuthenticated: false,\r\n    language: ''\r\n})","import React from 'react'\r\nimport classesCss from './styles/MainPage.module.scss'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst CountryCard = ({name, capital, preview, to, hoverHandler}) => {\r\n\r\n\r\n    const style = {\r\n        backgroundImage: `url(${preview})`,\r\n        backgroundSize: 'cover'\r\n    }\r\n\r\n    const capitalStringStyle = {}\r\n    if(capital.length > 12)capitalStringStyle.fontSize = '30px'\r\n    return (\r\n\r\n        <div\r\n            style={style}\r\n            className={classesCss.CountryCard}\r\n        >\r\n            <NavLink to={to}>\r\n                <span>{`${name},`}</span>\r\n                <span style={capitalStringStyle}>{capital}</span>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountryCard","import React, { useEffect } from \"react\";\r\nimport classesCss from \"./styles/MainPage.module.scss\";\r\nimport CountryCard from \"./CountryCard\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst MainPage = ({\r\n  searchValue,\r\n  setSearchExists,\r\n  countryResponse,\r\n  language,\r\n  isSearching,\r\n  setIsSearching,\r\n  history,\r\n}) => {\r\n  let countries;\r\n  if (countryResponse) {\r\n    let indexOfLang = countryResponse.langs.indexOf(language);\r\n    countries = countryResponse.countries.map((country) =>\r\n      Object.assign({}, country.langData[indexOfLang], {\r\n        preview: country.preview,\r\n        linkName: country.langData[0].countryName,\r\n      })\r\n    );\r\n  }\r\n\r\n  const filterCountries = (countries) => {\r\n    let filteredCountries = countries;\r\n    if (searchValue) {\r\n      filteredCountries = countries.filter(\r\n        (country) =>\r\n          country.countryName\r\n            .toLowerCase()\r\n            .includes(searchValue.toLowerCase()) ||\r\n          country.capitalName.toLowerCase().includes(searchValue.toLowerCase())\r\n      );\r\n    }\r\n\r\n    return filteredCountries.map((country, index) => {\r\n      if (isSearching) {\r\n        setIsSearching(false);\r\n        if (filteredCountries.length === 1) {\r\n          history.push(\r\n            `/country/${country.linkName.toLowerCase().replace(/[-\\s]/g, \"_\")}`\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <CountryCard\r\n          key={`countryCard${index}`}\r\n          name={country.countryName}\r\n          capital={country.capitalName}\r\n          preview={country.preview}\r\n          to={`/country/${country.linkName\r\n            .toLowerCase()\r\n            .replace(/[-\\s]/g, \"_\")}`}\r\n          engName={country.linkName}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSearchExists({ exists: true });\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classesCss.MainPage}>\r\n      {countries && filterCountries([...countries])}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(MainPage);\r\n","import {useCallback, useState} from \"react\";\r\n\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n    const clearError = () => setError(null)\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n        setLoading(true)\r\n        try {\r\n            if (body) {\r\n                body = JSON.stringify(body)\r\n                headers['Content-Type'] = 'application/json'\r\n            }\r\n            const urlAddon = \"https://travel-app-server24.herokuapp.com\"\r\n            //const urlAddon=\"\"\r\n            if(url[0] === \"/\") url = urlAddon+url;\r\n            const response = await fetch(url, {method, body, headers})\r\n            const data = await response.json()\r\n            if (!response.ok) {\r\n                console.log(data.message || \"Smth wrong\")\r\n            }\r\n\r\n            setLoading(false)\r\n            return (data)\r\n        } catch (e) {\r\n            setLoading(false)\r\n            setError(e.message)\r\n        }\r\n    }, [])\r\n\r\n    return {loading, error, request, clearError}\r\n}\r\n\r\n\r\nexport const useCountries = () => {\r\n    const {loading, error, request} = useHttp()\r\n    const [response, setResponse] = useState()\r\n\r\n    const countryAsyncRequest = useCallback(async (body = {}) => {\r\n        const requestResponse = await request('/api/country/get', 'POST', body)\r\n        setResponse(requestResponse)\r\n    }, [request])\r\n\r\n    const countryRequest = useCallback((body = {}) => {\r\n        const promiseResponse = countryAsyncRequest(body)\r\n        return(promiseResponse)\r\n    }, [countryAsyncRequest])\r\n\r\n    return {\r\n        cLoading : loading,\r\n        cError: error,\r\n        countryResponse: response,\r\n        getCountryFromBase: countryRequest\r\n    }\r\n}","import mapboxgl from 'mapbox-gl';\r\nimport {colorBoundaries} from \"./mapFunction\";\r\nimport './Map.css';\r\nimport React, {useRef, useEffect, useContext} from 'react';\r\nimport {AppContext} from \"../../context/AppContext\";\r\n\r\nconst Map = ({countryCode, countries, capitals, className, mapClassName}) => {\r\n  const mapContainer = useRef();\r\n  let capitalCoordinates;\r\n  let countryName;\r\n  let countryCoordinates;\r\n  const {language} = useContext(AppContext)\r\n\r\n  const getCountriesCoordinates = () => {\r\n    countries.features.find(country => {\r\n      if(country.properties.ISO_A2 === countryCode) {\r\n        countryCoordinates = country.geometry.coordinates;\r\n      }\r\n    })\r\n  }\r\n\r\n  const getCapitalCoordinates = () => {\r\n    capitals.find(country => {\r\n      if(country.CountryCode === countryCode) {\r\n        capitalCoordinates = [country.CapitalLongitude, country.CapitalLatitude]; //longitude , lattitude\r\n        countryName = country.CountryName;\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    getCountriesCoordinates()\r\n    getCapitalCoordinates()\r\n\r\n    mapboxgl.accessToken = \"pk.eyJ1Ijoic2Fmd29vZCIsImEiOiJja20wemV3djgxeDFwMnZtdzNlcmRmbnNqIn0.X8mmN1JOEEHQjSZ0I8_ChA\";\r\n    const map = new mapboxgl.Map ({\r\n      container: mapContainer.current,\r\n      style: \"mapbox://styles/mapbox/streets-v11\",\r\n      center: capitalCoordinates || countryCoordinates[0][0][0],\r\n      zoom: 4\r\n    })\r\n\r\n    const nav = new mapboxgl.NavigationControl({\r\n      showCompass: true,\r\n      showZoom: true\r\n    })\r\n\r\n    const el = document.createElement('div');\r\n    el.className = 'marker';\r\n\r\n    if(capitalCoordinates) {\r\n      new mapboxgl.Marker(el) \r\n      .setLngLat(capitalCoordinates)\r\n      .addTo(map)\r\n    }\r\n    \r\n    map.addControl(nav, 'bottom-right');\r\n    map.addControl(new mapboxgl.FullscreenControl());\r\n  \r\n    map.on('load', function() {\r\n      map.setLayoutProperty('country-label', 'text-field', ['get', 'name_' + language.toLocaleLowerCase()])\r\n    })\r\n    \r\n    colorBoundaries(map, countryCoordinates, countryName, capitalCoordinates)\r\n\r\n    return () => {\r\n      map.remove();\r\n    }\r\n  }, [language])\r\n\r\n  return (\r\n      <div className={[\"Map-wrapper\", className].join(\" \")}>\r\n        <div className={[\"Map\", mapClassName].join(\" \")} ref={mapContainer} />\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Map;\r\n\r\n","export const colorBoundaries = (map, countryCoordinates, countryName, capitalCoordinates) => {\r\n  map.on('load', function() {\r\n    map.addLayer({\r\n      id: \"boundaries\",\r\n      type: \"fill\",\r\n      source: {\r\n        type: \"geojson\",\r\n        data: {\r\n          \"type\": \"FeatureCollection\",\r\n          \"features\": [\r\n            { \r\n              \"type\": \"Feature\", \r\n              \"properties\": { \r\n                \"ADMIN\": countryName\r\n              }, \r\n              \"geometry\": { \"type\": \"MultiPolygon\", \r\n              \"coordinates\": countryCoordinates\r\n              } \r\n            }\r\n          ]\r\n        }\r\n      },\r\n      paint: {\r\n        \"fill-color\": \"#ffc617\",\r\n        \"fill-outline-color\": \"#000000\",\r\n        \"fill-opacity\": 0.2\r\n      }\r\n    });\r\n  })\r\n}","import React, {useContext, useState, useEffect} from \"react\";\r\nimport {AppContext} from \"../../context/AppContext\";\r\n\r\nexport const Currency = ({countryCode, classes}) => {\r\n    const [currentCurrency, setCurrency] = useState({time_last_update_unix: ''});\r\n    const {language} = useContext(AppContext)\r\n\r\n    const codeMap = {\r\n        FR: {\r\n            currency: 'EUR',\r\n            currencyTitle: {\r\n                'RU': 'ÐÐ²ÑÐ¾',\r\n                'EN': 'Euro',\r\n                'FR': 'Euro'\r\n            }\r\n        },\r\n        CH: {\r\n            currency: 'CHF',\r\n            currencyTitle: {\r\n                'RU': 'Ð¨Ð²ÐµÐ¹ÑÐ°ÑÑÐºÐ¸Ð¹ ÑÑÐ°Ð½Ðº',\r\n                'EN': 'Swiss franc',\r\n                'FR': 'Franc suisse'\r\n            }\r\n        },\r\n        IS: {\r\n            currency: 'ISK',\r\n            currencyTitle: {\r\n                'RU': 'ÐÑÐ»Ð°Ð½Ð´ÑÐºÐ°Ñ ÐºÑÐ¾Ð½Ð°',\r\n                'EN': 'Iceland krone',\r\n                'FR': 'Couronne islandaise'\r\n            }\r\n        },\r\n        NZ: {\r\n            currency: 'NZD',\r\n            currencyTitle: {\r\n                'RU': 'ÐÐ¾Ð²Ð¾Ð·ÐµÐ»Ð°Ð½Ð´ÑÐºÐ¸Ð¹ Ð´Ð¾Ð»Ð»Ð°Ñ',\r\n                'EN': 'New Zealand dollar',\r\n                'FR': 'Dollar nÃ©o-zÃ©landais'\r\n            }\r\n        },\r\n        NO: {\r\n            currency: 'NOK',\r\n            currencyTitle: {\r\n                'RU': 'ÐÐ¾ÑÐ²ÐµÐ¶ÑÐºÐ°Ñ ÐºÑÐ¾Ð½Ð°',\r\n                'EN': 'Norwegian krone',\r\n                'FR': 'Couronne norvÃ©gienne'\r\n            }\r\n        },\r\n        TH: {\r\n            currency: 'THB',\r\n            currencyTitle: {\r\n                'RU': 'Ð¢Ð°Ð¹ÑÐºÐ¸Ð¹ Ð±Ð°Ñ',\r\n                'EN': 'Thailand bath',\r\n                'FR': 'Baht'\r\n            }\r\n        },\r\n        PH: {\r\n            currency: 'PHP',\r\n            currencyTitle: {\r\n                'RU': 'Ð¤Ð¸Ð»Ð¸Ð¿Ð¿Ð¸Ð½ÑÐºÐ¾Ðµ Ð¿ÐµÑÐ¾',\r\n                'EN': 'Philippine peso',\r\n                'FR': 'Peso philippin'\r\n            }\r\n        },\r\n        HR: {\r\n            currency: 'HRK',\r\n            currencyTitle: {\r\n                'RU': 'Ð¥Ð¾ÑÐ²Ð°ÑÑÐºÐ°Ñ ÐºÑÐ½Ð°',\r\n                'EN': 'Croatian kuna',\r\n                'FR': 'Kuna croate'\r\n            }\r\n        },\r\n        BR: {\r\n            currency: 'BRL',\r\n            currencyTitle: {\r\n                'RU': 'ÐÑÐ°Ð·Ð¸Ð»ÑÑÐºÐ¸Ð¹ ÑÐµÐ°Ð»',\r\n                'EN': 'Brazilian Real',\r\n                'FR': 'RÃ©al brÃ©silien'\r\n            }\r\n        },\r\n        LK: {\r\n            currency: 'LKR',\r\n            currencyTitle: {\r\n                'RU': 'Ð¨ÑÐ¸-Ð»Ð°Ð½ÐºÐ¸Ð¹ÑÐºÐ°Ñ ÑÑÐ¿Ð¸Ñ',\r\n                'EN': 'Sri Lanka Rupee',\r\n                'FR': 'Roupie srilankaise'\r\n            }\r\n        },\r\n        JP: {\r\n            currency: 'JPY',\r\n            currencyTitle: {\r\n                'RU': 'Ð¯Ð¿Ð¾Ð½ÑÐºÐ°Ñ Ð¸ÐµÐ½Ð°',\r\n                'EN': 'Japanese yen',\r\n                'FR': 'Yen'\r\n            }\r\n        }\r\n    }\r\n\r\n    const textMap = {\r\n        'RU': {\r\n            title: 'ÐÑÑÑ Ð²Ð°Ð»ÑÑ',\r\n            dollar: 'ÐÐ¾Ð»Ð»Ð°Ñ Ð¡Ð¨Ð',\r\n            euro: 'ÐÐ²ÑÐ¾',\r\n            ruble: 'Ð ÑÐ±Ð»Ñ'\r\n        },\r\n        'EN': {\r\n            title: 'Rate of exchange',\r\n            dollar: 'US Dollar',\r\n            euro: 'Euro',\r\n            ruble: 'Ruble'\r\n        },\r\n        'FR': {\r\n            title: 'Taux de change',\r\n            dollar: 'Dollar amÃ©ricain',\r\n            euro: 'Euro',\r\n            ruble: 'Rouble'\r\n        }\r\n    }\r\n\r\n    let data;\r\n\r\n    const countryCurrency = codeMap[countryCode].currency;\r\n    const currencyName = codeMap[countryCode].currencyTitle[language];\r\n\r\n  const getData = async (currency) => {\r\n    try {\r\n      const API = 'https://v6.exchangerate-api.com/v6/675fab136db2f695f21dbba6/latest/';\r\n      const response = await fetch(`${API}${currency}`)\r\n      .then(res => res.json())\r\n      if(response.result === 'success' && response.time_last_update_unix !== currentCurrency.time_last_update_unix) {\r\n        setCurrency(response);\r\n        }\r\n        } catch (e) {\r\n            console.log(e.message);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData(countryCurrency);\r\n    }, []);\r\n\r\n    return (\r\n        <div className={classes?.wrap}>\r\n            <h4>{textMap[language].title}</h4>\r\n            <div>\r\n                <span className={classes?.currencyName}>{textMap[language].dollar}: </span>\r\n                <span className={classes?.currencyVal}>\r\n                    {currentCurrency.conversion_rates ? currentCurrency.conversion_rates.USD : ''}\r\n                </span>\r\n            </div>\r\n            <div>\r\n                <span className={classes?.currencyName}>{textMap[language].euro}: </span>\r\n                <span className={classes?.currencyVal}>\r\n                    {currentCurrency.conversion_rates ? currentCurrency.conversion_rates.EUR : ''}\r\n                </span>\r\n            </div>\r\n            <div>\r\n                <span className={classes?.currencyName}>{textMap[language].ruble}:   </span>\r\n                <span className={classes?.currencyVal}>\r\n                    {currentCurrency.conversion_rates ? currentCurrency.conversion_rates.RUB : ''}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useContext} from 'react';\r\nimport Player from 'react-youtube';\r\nimport {AppContext} from \"../../context/AppContext\";\r\n\r\nexport const Video = ({video, countryCode, className}) => {\r\n\r\n    const {language} = useContext(AppContext);\r\n\r\n  const videoId = { \r\n    EN: {\r\n      CH:\"oZRBUBbfIJ8\",\r\n      IS:\"u_f90pXw5sQ\",\r\n      NZ:\"_eMAXOp2PvA\",\r\n      PH:\"zYWj-ly7nR8\",\r\n      HR:\"X8IvMhXOxe4\",\r\n      BR:\"pF0IA2gBWig\",\r\n      LK:\"MbIPOgY9CTo\",\r\n      JP:\"prNYOW0_kms\"\r\n    },\r\n    FR: {\r\n      CH:\"ttNB8bpY274\",\r\n      IS:\"i1vPNSVwrbY\",\r\n      NZ:\"sWWXV_oQVDs\",\r\n      PH:\"q-kBTI1HDzk\",\r\n      HR:\"otfE-TAl1b0\",\r\n      BR:\"xhi7_ECf8pE\",\r\n      LK:\"-722kTYBGS4\",\r\n      JP:\"mufhEjK96gc\"\r\n    },\r\n    RU: {\r\n      CH:\"wb84vvYSPEU\",\r\n      IS:\"Qy1SP3Y5y9I\",\r\n      NZ:\"dZiadtI-scQ\",\r\n      PH:\"dmt3LcikoW4\",\r\n      HR:\"cNjP2nUyB6U\",\r\n      BR:\"1x4DnVMWAGs\",\r\n      LK:\"1kdGmdQ4ZOI\",\r\n      JP:\"Gb0TQ7VeApY\"\r\n    }\r\n  }\r\n\r\n\r\n    const opts = {\r\n        playerVars: {\r\n            autoplay: 0,\r\n            rel: 0,\r\n            modestbranding: 1,\r\n            hl: language\r\n        },\r\n    };\r\n\r\n    return (\r\n        <div className={className}>\r\n            <Player\r\n                videoId={video ? video : videoId[language][countryCode]}\r\n                opts={opts}\r\n            />\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {Swiper, SwiperSlide} from 'swiper/react';\r\nimport SwiperCore, {Navigation, EffectFade, Autoplay} from 'swiper/core';\r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/navigation/navigation.scss';\r\nimport 'swiper/components/scrollbar/scrollbar.scss';\r\nimport 'swiper/components/effect-fade/effect-fade.scss';\r\nimport './slider-overwrite.scss'\r\nimport classesCss from './Slider.module.scss'\r\n\r\nSwiperCore.use([Navigation, EffectFade, Autoplay]);\r\n\r\nexport default function Slider({slides}) {\r\n    return (\r\n        <Swiper\r\n            slidesPerView={1}\r\n            loop\r\n            autoplay={{\r\n                delay: 4500,\r\n                disableOnInteraction: false,\r\n            }}\r\n            effect={\"fade\"}\r\n        >\r\n\r\n            {slides.map((slide, index) => {\r\n                return (\r\n                    <SwiperSlide\r\n                        className={classesCss.Slide}\r\n                        key={index}\r\n                        style={{backgroundImage: `url(${slide.file})`}}/>\r\n                )\r\n            }\r\n            )}\r\n        </Swiper>\r\n\r\n    );\r\n};","import React, {useContext, useEffect, useState} from \"react\";\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { Swiper, SwiperSlide} from 'swiper/react';\r\nimport SwiperCore, {Navigation, Scrollbar} from 'swiper/core';\r\nimport {AppContext} from \"../../context/AppContext\";\r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/navigation/navigation.scss';\r\nimport 'swiper/components/scrollbar/scrollbar.scss';\r\nimport './slider-overwrite.scss'\r\n\r\nexport default function ModalWindow (props) {\r\n    const {language} = useContext(AppContext)\r\n    const onClose = () => {\r\n        props.onClose?.();\r\n    }\r\n    const translation ={\r\n      'EN': 0,\r\n      'RU': 1,\r\n      'FR': 2\r\n    }\r\n\r\n    return (\r\n\r\n        <Modal\r\n            className = \"modal-slider\"\r\n            open={props.isOpened}\r\n            disableBackdropClick = {false}\r\n            disableEscapeKeyDown = {false}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n            onClose={() => props.onClose?.()}\r\n            >\r\n        <Swiper\r\n\r\n          spaceBetween={100}\r\n          slidesPerView={1}\r\n          centeredSlides\r\n          loop\r\n          navigation\r\n          initialSlide = {props.index}\r\n        >\r\n\r\n        {props.content.map((e, i) =>\r\n                  {\r\n                    return (<SwiperSlide key={i+e.fullPhoto}>\r\n\r\n                    <div>\r\n                        <img src={e?.fullPhoto} alt=\"\"  height=\"600\"/>\r\n                        <div className=\"sight-description\">{e?.langData[translation[language]].description}</div>\r\n\r\n                    </div>\r\n                    </SwiperSlide>)\r\n                  }\r\n\r\n                )}\r\n        </Swiper>\r\n        </Modal>\r\n    )\r\n}","import React, {useContext, useEffect, useState} from 'react';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faStar as EmptyStar} from '@fortawesome/free-regular-svg-icons';\r\nimport {faStar as SolidStar} from '@fortawesome/free-solid-svg-icons';\r\nimport './RatingStyles.css';\r\nimport {useHttp} from \"../../hooks/useHttp\";\r\nimport {AppContext} from \"../../context/AppContext\";\r\n\r\nexport const RatingStars = ({className, place, classes, showRateCard, index, data}) => {\r\n    const {request} = useHttp()\r\n    const {userId} = useContext(AppContext)\r\n    const stars = new Array(5).fill('EmptyStar');\r\n    const starColor = {color: 'FDBF5A'};\r\n    const starIndices = [0, 1, 2, 3, 4,];\r\n    const [starSet, setStarSet] = useState(stars);\r\n    const [userMark, setUserMark] = useState(false);\r\n\r\n\r\n    const [rating, setRating] = useState({\r\n        averageRate: Math.floor(place.rate * 10) / 10\r\n    });\r\n\r\n    const changeStars = (rating) => {\r\n        const newStarsSet = stars.map((star, index) => {\r\n            return index <= rating ? 'SolidStar' : 'EmptyStar'\r\n        })\r\n        setStarSet(newStarsSet)\r\n    }\r\n\r\n\r\n    const ratingSaveHandler = async (body) => {\r\n        try {\r\n            return await request('/api/country/setstar', 'POST', {...body})\r\n        } catch (e) {\r\n            return {message: \"Something gonna wrong\", e}\r\n        }\r\n    }\r\n\r\n    const onStarClick = async (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        const starId = e.currentTarget.id;\r\n        changeStars(+starId);\r\n\r\n        const {\r\n            newRate,\r\n            message\r\n        } = await ratingSaveHandler({showplace: place._id, user: userId, value: Number(starId) + 1})\r\n        if (!message) {\r\n            setRating({\r\n                averageRate: Math.floor(newRate * 10) / 10\r\n            })\r\n            setUserMark(true)\r\n        }\r\n    }\r\n\r\n    const onHover = (e) => {\r\n        if (!userMark) {\r\n            changeStars(e.target.id)\r\n        }\r\n    }\r\n\r\n    const onMouseLeave = () => {\r\n        if (!userMark) {\r\n            changeStars(-1);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {  // ÑÐ°Ð·Ð±Ð»Ð¾ÐºÐ¸ÑÐ¾Ð²Ð°ÑÑ ÐµÑÐ»Ð¸ Ð´Ð¾Ð±Ð°Ð²Ð¸Ð¼ id Ð½Ð° ÑÐµÑÐ²ÐµÑ\r\n        if (data) {\r\n            const currentUserMark = data.find(user => {\r\n                return user.id === userId\r\n            })\r\n            if (currentUserMark) {\r\n                changeStars(Number(currentUserMark.value - 1))\r\n                setUserMark(true)\r\n            }\r\n        }\r\n\r\n\r\n    }, [data])\r\n\r\n    return (\r\n        <div className={className}>\r\n            <div className=\"Rating\">\r\n                <ul className=\"Rating__list\">\r\n                    {\r\n                        starIndices.map(star =>\r\n                            <li className=\"Rating__item\" key={star}>\r\n                                <a className=\"Rating__link\"><FontAwesomeIcon\r\n                                    icon={starSet[star] === 'EmptyStar' ? EmptyStar : SolidStar} id={star}\r\n                                    onMouseLeave={onMouseLeave} onMouseEnter={onHover} onClick={onStarClick}\r\n                                    style={starColor}/></a>\r\n                            </li>)\r\n                    }\r\n                </ul>\r\n                <p\r\n                    onMouseEnter={() => showRateCard(index)}\r\n                    onMouseLeave={() => showRateCard(-1)}\r\n                    className={[\"Rating__total\", classes.rate].join(' ')}>\r\n                    {rating.averageRate ? rating.averageRate : ''}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport Avatar from \"@material-ui/core/Avatar\"\r\nimport classesCss from './RateCard.module.scss'\r\n\r\nconst userImageLink = \"https://travel-app-24.s3.eu-north-1.amazonaws.com/\"\r\n\r\nconst RateCard = ({data, style}) => {\r\n    return (\r\n        <div className={classesCss.RateCard} style={style}>\r\n            {\r\n                data.map(record => {\r\n                    return (\r\n                        <div className={classesCss.RateRecord}>\r\n                            <Avatar\r\n                                className={classesCss.Avatar}\r\n                                alt={record.name?.toUpperCase() || record.email?.toUpperCase()}\r\n                                src={record.userImage? userImageLink+record.userImage: \"\"}\r\n                            />\r\n                            <span className={classesCss.UserName}>{record.name || record.email}</span>-\r\n                            <span className={classesCss.Rate}>{record.value}</span>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RateCard","import React, {useContext, useEffect, useState} from 'react';\r\nimport ModalWindow from './sight.modal'\r\nimport {Swiper, SwiperSlide} from 'swiper/react';\r\nimport SwiperCore, {Navigation, Pagination} from 'swiper/core';\r\nimport 'swiper/components/navigation/navigation.scss';\r\nimport 'swiper/components/scrollbar/scrollbar.scss';\r\nimport './slider-overwrite.scss'\r\nimport classesCss from './Slider.module.scss'\r\nimport {AppContext} from \"../../context/AppContext\";\r\nimport {RatingStars} from \"../Rating/RatingStars\";\r\nimport {useHttp} from \"../../hooks/useHttp\";\r\nimport RateCard from \"../RateCard/RateCard\";\r\n\r\n\r\nSwiperCore.use([Navigation, Pagination]);\r\n\r\n\r\nexport default function SightGallery({places}) {\r\n\r\n    const [modalState, setModalState] = useState({visibility: false, index: null})\r\n    const [rateMap, setRateMap] = useState(null)\r\n    const [currentRateCard, setCurrentRateCard] = useState(-1)\r\n    const {language, token} = useContext(AppContext);\r\n\r\n    const {request} = useHttp()\r\n\r\n\r\n    const showRateCard = (index) => {\r\n        console.log(index)\r\n        setCurrentRateCard(index)\r\n    }\r\n\r\n\r\n    const onClose = () => {\r\n        setModalState({\r\n            ...modalState,\r\n            visibility: false\r\n        })\r\n    }\r\n    const showObject = (index) => {\r\n        setModalState({\r\n            visibility: true,\r\n            index\r\n        })\r\n    }\r\n\r\n    const getLangIndex = (langSet) => {\r\n        return langSet.findIndex((langItem) => {\r\n            return langItem.lang === language\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(async () => {\r\n        if(places){\r\n            const placesId = places.map(place => {\r\n                return place._id\r\n            })\r\n            try{\r\n                const rateMap = await request('/api/country/getrates', 'POST', {places : placesId})\r\n                console.log(rateMap)\r\n\r\n                setRateMap(rateMap)\r\n            } catch(e){\r\n                console.log(e)\r\n            }\r\n        }\r\n    }, [places])\r\n\r\n\r\n    const showStyle = {\r\n        visibility: 'visible',\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <ModalWindow\r\n                isOpened={modalState.visibility}\r\n                index = {modalState.index}\r\n                onClose={onClose}\r\n                content={places}/>\r\n            <Swiper\r\n                spaceBetween={50}\r\n                slidesPerView={4}\r\n                navigation\r\n                centeredSlides\r\n                loop\r\n            >\r\n\r\n                {places.map((place, index) => {\r\n                        return (\r\n                            <SwiperSlide\r\n                                key={index+place.prevPhoto}\r\n                                onClick={() => showObject(index)}\r\n                                className={classesCss.ShowplaceSlide}\r\n                                style={{backgroundImage: `url(${place.prevPhoto})`}}\r\n                            >\r\n                                <h3>{place.langData[getLangIndex(place.langData)].name}</h3>\r\n                                <div className={classesCss.ShortDescription}>\r\n                                    {place.langData[getLangIndex(place.langData)].shortDescription}\r\n                                </div>\r\n                                {\r\n                                    token?\r\n                                        <RatingStars\r\n                                            className={classesCss.Rating}\r\n                                            classes={{\r\n                                                rate: classesCss.RateNumber\r\n                                            }}\r\n                                            index={index}\r\n                                            place={place}\r\n                                            showRateCard={showRateCard}\r\n                                            data={token && rateMap && rateMap[place._id].length> 0 ? rateMap[place._id] : null}\r\n                                        /> : null\r\n                                }\r\n                                {\r\n                                    token && rateMap && rateMap[place._id].length> 0?\r\n                                        <RateCard\r\n                                            style={index === currentRateCard? showStyle: {}}\r\n                                            data={rateMap[place._id]}\r\n                                        /> : null\r\n                                }\r\n\r\n                            </SwiperSlide>)\r\n                    }\r\n                )}\r\n                ...\r\n            </Swiper>\r\n        </>\r\n    );\r\n};","import React, {useContext, useEffect, useState} from \"react\";\r\nimport \"./owfont-master/css/owfont-regular.css\";\r\nimport {AppContext} from \"../../context/AppContext\";\r\n\r\nexport default function Weather({city, classes}) {\r\n    const API_KEY = '9c5da7e0baec7ef80674d09f43a9840d';\r\n    const {language} = useContext(AppContext)\r\n    const [weatherObject, setWeatherObject] = useState({})\r\n\r\n\r\n    const translation = {\r\n        'RU': {\r\n            humidity: 'ÐÐ»Ð°Ð¶Ð½Ð¾ÑÑÑ',\r\n            wind: 'ÐÐµÑÐµÑ',\r\n        },\r\n        'EN': {\r\n            humidity: 'Humidity',\r\n            wind: 'Wind',\r\n        },\r\n        'FR': {\r\n            humidity: 'HumiditÃ©',\r\n            wind: 'Vent',\r\n        }\r\n    }\r\n\r\n    async function getWeater() {\r\n        const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&lang=${language}&appid=${API_KEY}&units=metric`;\r\n        const res = await fetch(url);\r\n        const data = await res.json();\r\n\t\tsetWeatherObject(\r\n                {temperature: `${data.main.temp.toFixed(0)}Â°C`,\r\n                weatherDescription:`${data.weather[0].description[0].toUpperCase()}${data.weather[0].description.slice(1)}`,\r\n                humidity:`${translation[language].humidity}: ${data.main.humidity}%`,\r\n                speedWind:`${translation[language].wind}: ${data.wind.speed} m/s`,\r\n                weatherIcon:`${data.weather[0].id}`\r\n                }\r\n            )\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        getWeater();\r\n    }, [language]);\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes?.wrap}>\r\n            <div className={classes?.temperature}>{weatherObject.temperature}</div>\r\n            <div className={[`owf owf-${weatherObject.weatherIcon}`, classes?.icon].join(' ')} />\r\n            <div className={classes?.weatherDescription}>{weatherObject.weatherDescription}</div>\r\n            <div className={classes?.humidity}>{weatherObject.humidity}</div>\r\n            <div className={classes?.speedWind}>{weatherObject.speedWind}</div>\r\n        </div>\r\n\r\n    )\r\n}","import React, {useContext, useEffect, useState } from \"react\";\r\nimport {AppContext} from \"../../context/AppContext\";\r\n\r\nexport default function ShowTime(props) {\r\n    const {language} = useContext(AppContext)\r\n    const [date, setDate] = useState('')\r\n    const translation = {\r\n        'RU': 'ru-RU',\r\n        'EN': 'en-US',\r\n        'FR': 'fr-FR'\r\n    }\r\n    let currentCity = props.country.langData[0].capitalName\r\n    const utcZone = {\r\n        'Brasilia': -3,\r\n        'Reykjavik': 0,\r\n        'Paris': 1,\r\n        'Bern': 1,\r\n        'Oslo': 1,\r\n        'Zagreb': 1,\r\n        'Sri Jayawardenepura Kotte': [5, 30],\r\n        'Bangkok': 7,\r\n        'Manila': 8,\r\n        'Tokyo': 9,\r\n        'Wellington': 13,\r\n    }\r\n\r\n    let today = new Date();\r\n    let options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\r\n    let weekDate = today.toLocaleDateString(`${translation[language]}`, options)\r\n    let currentUTC = utcZone[currentCity]\r\n\r\n\r\n\r\n    function addZero(n) {\r\n        return (parseInt(n, 10) < 10 ? '0' : '') + n;\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        let interval = setInterval(() => {\r\n\r\n            let today = new Date();\r\n\r\n\r\n            if (Array.isArray(currentUTC)) {\r\n                today.setTime(today.getTime() + currentUTC[0] * 1000 * 60 * 60 + currentUTC[1] * 1000 * 60);\r\n            } else {\r\n                today.setTime(today.getTime() + currentUTC * 1000 * 60 * 60)\r\n\r\n            }\r\n\r\n            let hour = today.getUTCHours();\r\n            let min = today.getUTCMinutes();\r\n            let sec = today.getSeconds();\r\n\r\n\r\n            setDate(`${addZero(hour)}:${addZero(min)}:${addZero(sec)}`)\r\n        }, 1000);\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    return (\r\n        <div className={props.className}>\r\n            <div className={props.timeClassName}>{date}</div>\r\n            <div className={props.dateClassName}>{weekDate}</div>\r\n        </div>\r\n    )\r\n\r\n  }\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport { useCountries } from \"../hooks/useHttp\";\r\nimport { AppContext } from \"../context/AppContext\";\r\nimport Countries from \"../components/Map/countriesShort.json\";\r\nimport Capitals from \"../components/Map/capitals.json\";\r\nimport Map from \"../components/Map/Map\";\r\nimport { Currency } from \"../components/Currency/Currency\";\r\nimport { Video } from \"../components/Video/Video\";\r\nimport Slider from \"../components/Sliders/slider.js\";\r\nimport SightGallery from \"../components/Sliders/sight.gallery.js\";\r\nimport Weather from \"../components/weather/weather.js\";\r\nimport ShowTime from \"../components/Clock/Ð¡lock.js\";\r\nimport classesCss from \"./styles/CountryPage.module.scss\";\r\n\r\nexport const CountryPage = ({ updateSearch, country }) => {\r\n  const { language } = useContext(AppContext);\r\n  const { countryResponse, getCountryFromBase } = useCountries();\r\n  const countriesData = Countries;\r\n  const capitalsData = Capitals;\r\n\r\n  useEffect(() => {\r\n    updateSearch({ exists: false });\r\n    getCountryFromBase({\r\n      countryCode: country.countryCode,\r\n      key: \"showplacesOnly\",\r\n    });\r\n  }, [getCountryFromBase]);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  const currentLangData = country.langData.find(\r\n    (langItem) => langItem.lang === language\r\n  );\r\n\r\n  return (\r\n    <div className={classesCss.CountryPage}>\r\n      <div className={classesCss.SlideContainer}>\r\n        <Slider slides={country.countryPhotos} />\r\n        <div className={classesCss.CountryWelcome}>\r\n          <h2 className={classesCss.Country}>\r\n            {currentLangData.countryName.toUpperCase()}\r\n          </h2>\r\n          <div className={classesCss.Capital}>\r\n            <span className={classesCss.CapitalName}>\r\n              {currentLangData.capitalName.toUpperCase()}\r\n            </span>\r\n            <ShowTime\r\n              country={country}\r\n              className={classesCss.CapitalTime}\r\n              timeClassName={classesCss.Time}\r\n              dateClassName={classesCss.Date}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className={classesCss.CountryWidgets}>\r\n          <Weather\r\n            city={country.langData[0].capitalName}\r\n            classes={{\r\n              wrap: classesCss.WeatherWidget,\r\n              icon: classesCss.WeatherIcon,\r\n              temperature: classesCss.WeatherTemperature,\r\n            }}\r\n          />\r\n          <Currency\r\n            countryCode={country.countryCode}\r\n            classes={{\r\n              wrap: classesCss.CurrencyWidget,\r\n              currencyVal: classesCss.CurrencyValue,\r\n              currencyName: classesCss.CurrencyName,\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className={classesCss.ShowplacesContainer}>\r\n        {countryResponse ? (\r\n          <SightGallery places={countryResponse.showplaces} />\r\n        ) : null}\r\n      </div>\r\n      <div className={classesCss.InfoContainer}>\r\n        <Map\r\n          countries={countriesData}\r\n          countryCode={country.countryCode}\r\n          capitals={capitalsData}\r\n          className={classesCss.MapContainer}\r\n          mapClassName={classesCss.Map}\r\n        />\r\n        <div className={classesCss.Description}>\r\n          <div className={classesCss.DescText}>\r\n            {currentLangData.description}\r\n          </div>\r\n          <Video\r\n            countryCode={country.countryCode}\r\n            video={currentLangData.video}\r\n            className={classesCss.VideoBlock}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\n\r\nconst Button = ({onClick, label, disabled, className}) => {\r\n    return(\r\n        <button\r\n            onClick={onClick}\r\n            disabled={disabled}\r\n            className={className}\r\n        >\r\n            {label}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button","import React from 'react'\r\nimport classesCss from './style/Input.module.scss'\r\n\r\nconst Input = ({\r\n                   name,\r\n                   type,\r\n                   onChange,\r\n                   label,\r\n                   placeholder,\r\n                   className,\r\n                   value,\r\n                   dataAttr,\r\n                   style,\r\n                   blockStyle,\r\n                   autoComplete\r\n               }) => {\r\n\r\n    const classes = [classesCss.InputBlock, className]\r\n\r\n    const dataProps = {}\r\n    for (let attrName in dataAttr) {\r\n        if (dataAttr.hasOwnProperty(attrName))\r\n            dataProps[`data-${attrName}`] = dataAttr[attrName]\r\n    }\r\n\r\n    return (\r\n        <div\r\n            style={blockStyle}\r\n            className={classes.join(' ')}>\r\n            <label htmlFor={`inputId${name}`}>{label}</label>\r\n            <input\r\n                autoComplete={autoComplete}\r\n                style={style}\r\n                name={name}\r\n                type={type}\r\n                value={value}\r\n                onChange={onChange}\r\n                placeholder={placeholder}\r\n                {...dataProps}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","import React, { useState } from \"react\";\r\nimport Button from \"../Buttons/Button\";\r\nimport Input from \"./Input/Input\";\r\n\r\nconst AuthForm = ({\r\n  classes,\r\n  message,\r\n  loginHandler,\r\n  signUpHandler,\r\n  waitCondition,\r\n  langExtraData,\r\n}) => {\r\n  const [form, setForm] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n\r\n  const changeHandler = (event) => {\r\n    setForm({ ...form, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.AuthForm}>\r\n      <div className={classes.FormMessage}>{message}</div>\r\n      <Input\r\n        label={`${langExtraData.logIn}: `}\r\n        name={\"email\"}\r\n        type=\"text\"\r\n        onChange={changeHandler}\r\n        className={classes.AuthInput}\r\n        autoComplete={\"off\"}\r\n      />\r\n      <Input\r\n        className={classes.AuthInput}\r\n        name={\"password\"}\r\n        type={\"password\"}\r\n        label={`${langExtraData.password}: `}\r\n        onChange={changeHandler}\r\n        autoComplete={\"off\"}\r\n      />\r\n      <div className={classes.AuthButtonSet}>\r\n        <Button\r\n          onClick={() => loginHandler(form)}\r\n          disabled={waitCondition}\r\n          label={langExtraData.signInConfirm}\r\n          className={[classes.SignInButton, classes.FormButton].join(\" \")}\r\n        />\r\n\r\n        <Button\r\n          onClick={() => signUpHandler(form)}\r\n          disabled={waitCondition}\r\n          label={langExtraData.signUpConfirm}\r\n          className={[classes.SignUpButton, classes.FormButton].join(\" \")}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import React, {useState, useEffect, useContext} from 'react'\r\nimport {useHttp} from \"../hooks/useHttp\";\r\nimport {AppContext} from \"../context/AppContext\";\r\nimport classesCss from \"./styles/AuthPage.module.scss\"\r\nimport AuthForm from \"../components/Forms/AuthForm\";\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst AuthPage = ({history, updateSearch, langExtraData}) => {\r\n    const {loading, error, request} = useHttp()\r\n    const [message, setMessage] = useState('')\r\n    const auth = useContext(AppContext)\r\n\r\n\r\n    const loginHandler = async(form) => {\r\n        try{\r\n            const data = await request('/api/auth/login', 'POST', {...form})\r\n            if(data.token){\r\n                auth.login(data.token, data.userData)\r\n                setMessage(data.message || '')\r\n                history.push('/')\r\n            }\r\n\r\n        } catch(e){\r\n        }\r\n    }\r\n\r\n    const requestHandler = async(form) => {\r\n        try{\r\n            const data = await request('/api/auth/register', 'POST', {...form})\r\n            if(data.message === \"You successfully registered\"){\r\n                await loginHandler(form)\r\n                history.push('/user')\r\n            }\r\n            setMessage(data.message || '')\r\n        } catch(e){\r\n\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        setMessage(error)\r\n    }, [error])\r\n\r\n    useEffect(() => {\r\n        updateSearch({ exists: false });\r\n    }, []);\r\n\r\n    return (\r\n        <div className={classesCss.AuthPage}>\r\n            <AuthForm\r\n                classes={classesCss}\r\n                message={message}\r\n                loginHandler={loginHandler}\r\n                signUpHandler={requestHandler}\r\n                waitCondition={loading}\r\n                langExtraData={langExtraData}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(AuthPage)","import React, {useContext, useEffect, useState} from 'react'\r\nimport ImageUploading from 'react-images-uploading';\r\nimport classesCss from './styles/AuthPage.module.scss'\r\nimport Input from \"../components/Forms/Input/Input\";\r\nimport {AppContext} from \"../context/AppContext\";\r\nimport Axios from 'axios'\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nconst UserPage = ({updateSearch}) => {\r\n    const auth = useContext(AppContext)\r\n    const [image, setImage] = useState(null);\r\n    const [name, setName] = useState(auth.userData.name || \"\");\r\n    const [message, setMessage] = useState('')\r\n\r\n    const onChangeImage = (image) => {\r\n        setImage(image);\r\n    };\r\n\r\n    const onChangeName = (event) => {\r\n        setName(event.target.value);\r\n    };\r\n\r\n\r\n    const onSendHandler = async () => {\r\n        const formData = new FormData();\r\n        formData.append('image',image[0].file);\r\n        formData.append('name', name);\r\n        formData.append('id',auth.userId);\r\n        const newData = await Axios.post('https://travel-app-server24.herokuapp.com/api/user/upd', formData)\r\n        const updData = {name: newData?.data?.name}\r\n        if(newData?.data?.image) updData.image = newData.data.image\r\n        if(newData?.data?.message) setMessage(newData.data.message)\r\n        auth.updateData(updData)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        updateSearch({exists: false});\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div className={classesCss.UserPage}>\r\n            <Input\r\n                value={name}\r\n                name={\"name\"}\r\n                className={classesCss.NameInput}\r\n                label={\"Your Name:\"}\r\n                autoComplete={\"off\"}\r\n                onChange={onChangeName}\r\n            />\r\n            <ImageUploading\r\n                value={image}\r\n                onChange={onChangeImage}\r\n                maxNumber={1}\r\n                dataURLKey=\"data_url\"\r\n            >\r\n                {({\r\n                      imageList,\r\n                      onImageUpload,\r\n                      onImageUpdate,\r\n                      onImageRemove,\r\n                      isDragging,\r\n                      dragProps,\r\n                  }) => (\r\n                    // write your building UI\r\n                    <div className=\"upload__image-wrapper\">\r\n                        {\r\n                            !imageList.length > 0 ?\r\n                                <button\r\n                                    className={classesCss.ImageLoadButton}\r\n                                    style={isDragging ? {color: 'red'} : undefined}\r\n                                    onClick={onImageUpload}\r\n                                    {...dragProps}\r\n                                >\r\n                                    Click or Drop here\r\n                                </button> : null\r\n                        }\r\n\r\n                        &nbsp;\r\n                        {imageList.map((image, index) => (\r\n                            <div key={index} className=\"image-item\">\r\n                                <img src={image['data_url']} alt=\"\" width=\"100\"/>\r\n                                <div className=\"image-item__btn-wrapper\">\r\n                                    <button\r\n                                        onClick={() => {\r\n                                            onImageUpdate(index)\r\n                                        }}\r\n                                        className={classesCss.ImageHandler}>\r\n                                        Update\r\n                                    </button>\r\n                                    <button\r\n                                        onClick={() => {\r\n                                            onImageRemove(index)\r\n                                        }}\r\n                                        className={classesCss.ImageHandler}\r\n                                    >\r\n                                        Remove\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </ImageUploading>\r\n            <button\r\n                onClick={onSendHandler}\r\n                className={classesCss.SaveButton}>\r\n                Save\r\n            </button>\r\n            <br/>\r\n            {message}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(UserPage)","import React from 'react'\r\n\r\nconst NavBar = ({classes, children}) => {\r\n    return(\r\n        <div className={classes}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar","import React, {useContext, useState} from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {AppContext} from \"../../context/AppContext\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst UserBar = ({classes, langExtraData}) => {\r\n    const [logoutVisibility, setLogoutVisibility] = useState(false)\r\n    const userImageLink = \"https://travel-app-24.s3.eu-north-1.amazonaws.com/\"\r\n    const {userData} = useContext(AppContext)\r\n\r\n\r\n    return (\r\n        <div className={classes.wrap}>\r\n            <AppContext.Consumer>\r\n                {(value) =>\r\n                    !value.isAuthenticated ? (\r\n                        <NavLink className={classes.logButton} to={\"/login\"}>\r\n                            {langExtraData.signIn}\r\n                        </NavLink>\r\n                    ) : (\r\n                        <div>\r\n                            <NavLink\r\n                                isActive={(match) => {\r\n                                    if(match){\r\n                                        setLogoutVisibility(true)\r\n                                    } else {\r\n                                        setLogoutVisibility(false)\r\n                                    }\r\n                                }}\r\n                                className={classes.avatar}\r\n                                to={\"/user\"}>\r\n                                {\r\n                                    !logoutVisibility ?\r\n                                        <Avatar\r\n                                            alt={userData?.name?.toUpperCase() || userData?.email?.toUpperCase()}\r\n                                            src={userImageLink+userData?.image}\r\n                                        /> : null\r\n                                }\r\n\r\n                            </NavLink>\r\n                            {logoutVisibility ?\r\n                                <NavLink to={\"/\"} className={classes.logButton} onClick={value.logout}>\r\n                                    {langExtraData.logOut}\r\n                                </NavLink> : null\r\n                            }\r\n\r\n                        </div>\r\n\r\n                    )\r\n                }\r\n            </AppContext.Consumer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserBar;\r\n","import React from \"react\";\r\n\r\ninterface TabPanelProps {\r\n    children?: React.ReactNode;\r\n    label: string;\r\n    value?: any;\r\n    index?: any;\r\n    className: string;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n\r\n    const { children, index, value, label, className, ...other } = props;\r\n\r\n    const classes = \"gogo\"\r\n\r\n    return (\r\n        <div\r\n            style={{display: value === index? 'flex': 'none'}}\r\n            role={\"tabpanel\"}\r\n            className={[classes ,className].join(' ')}\r\n            hidden={value !== index}\r\n            id={`vertical-tabpanel-${index}`}\r\n            aria-labelledby={`vertical-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && children}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default TabPanel","import React, {useState} from 'react';\r\nimport { makeStyles} from '@material-ui/core/styles';\r\nimport {Tab} from '@material-ui/core';\r\nimport Tabs from '@material-ui/core/Tabs';\r\n\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `vertical-tab-${index}`,\r\n        'aria-controls': `vertical-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n        display: 'flex',\r\n    },\r\n    tabs: {\r\n        borderRight: `1px solid ${theme.palette.divider}`,\r\n    },\r\n}));\r\n\r\n\r\nconst VerticalTabs = ({children}) => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n\r\n    let TabLabels = null;\r\n    let TabsContent = null;\r\n    if(children){\r\n        TabLabels = children.map((child, index) => {\r\n            return (<Tab label={child.props.label} key = {index} {...a11yProps(index)} />)\r\n        })\r\n        TabsContent = children.map((child, index) => {\r\n            return React.cloneElement(child, {value: value, key: index, index})\r\n        })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Tabs\r\n                style={{minWidth: '200px'}}\r\n                orientation=\"vertical\"\r\n                variant=\"scrollable\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                aria-label=\"Vertical tabs example\"\r\n                className={classes.tabs}\r\n            >\r\n                {TabLabels}\r\n            </Tabs>\r\n            {TabsContent}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default VerticalTabs","import React, {useState} from 'react'\r\nimport Input from \"../../components/Forms/Input/Input\";\r\nimport Button from \"../../components/Buttons/Button\";\r\n\r\n\r\nconst countryData = {\r\n    countryCode: \"\"\r\n}\r\n\r\nconst CountryAddForm = ({sendHandler, removeHandler, waitCondition, message, countriesCodes}) => {\r\n    const [form, setForm] = useState(countryData)\r\n\r\n    const changeHandler = event => {\r\n        setForm({...form, [event.target.name]: event.target.value})\r\n    }\r\n\r\n    const removeButtonHandler = code => {\r\n        if(window.confirm(\"Are you sure?\"))\r\n            removeHandler(code)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Input\r\n                label={\"Country code:\"}\r\n                onChange={changeHandler}\r\n                name={\"countryCode\"}\r\n            />\r\n\r\n            {countriesCodes?\r\n                countriesCodes.map((code, index) => {\r\n                    return (\r\n                        <div key = {index}>\r\n                            {code}\r\n                            <span onClick={() => removeButtonHandler(code)}> X</span>\r\n                        </div>)\r\n                }) : null\r\n            }\r\n\r\n\r\n            <Button\r\n                onClick={() => sendHandler(form)}\r\n                disabled={waitCondition}\r\n                label={\"Add\"}\r\n            />\r\n            <br/>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountryAddForm","import React from 'react'\r\n\r\nconst Textarea = ({name, onChange, label, placeholder, className, value, rows, style, dataAttr}) => {\r\n\r\n    const dataProps = {}\r\n    for(let attrName in dataAttr){\r\n        if(dataAttr.hasOwnProperty(attrName))\r\n            dataProps[`data-${attrName}`] = dataAttr[attrName]\r\n    }\r\n\r\n    return(\r\n        <div className={className}>\r\n            <label htmlFor={`textareaId${name}`}>{label}</label>\r\n            <br />\r\n            <textarea\r\n                name={name}\r\n                style={style}\r\n                id={`textareaId${name}`}\r\n                value={value}\r\n                rows={rows}\r\n                onChange={onChange}\r\n                placeholder={placeholder}\r\n                {...dataProps}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Textarea","import React from 'react'\r\nimport classesCss from './styles/Structs.module.scss'\r\n\r\n\r\nexport default function Column({children, className}){\r\n    return(\r\n        <div className={[classesCss.Column, className].join(' ')}>\r\n            {children}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport classesCss from './styles/Structs.module.scss'\r\n\r\n\r\nexport default function Row({children, className, style}){\r\n    return(\r\n        <div style={style} className={[classesCss.Row, className].join(' ')}>\r\n            {children}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport classesCss from \"./SliderForm.module.scss\"\r\n\r\n\r\nconst SliderForm = ({onChange, data, children}) => {\r\n\r\n    const onChangeHandler = event => {\r\n        const changeData = [...data]\r\n        changeData[event.target.dataset.index][event.target.name] = event.target.value\r\n        onChange(changeData)\r\n    }\r\n\r\n    const onAddHandler = () => {\r\n        const changeData = [...data]\r\n        changeData.splice(0, 0, {file: \"\", description: \"\"})\r\n        onChange(changeData)\r\n    }\r\n\r\n    const onRemoveHandler = (index) => {\r\n        const changeData = [...data]\r\n        changeData.splice(index, 1)\r\n        onChange(changeData)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classesCss.Slider}>\r\n            <div className={classesCss.AddButton} onClick={onAddHandler}>\r\n                ÐÐ¾Ð±Ð°Ð²Ð¸ÑÑ ÑÐ»Ð°Ð¹Ð´\r\n            </div>\r\n            {data ?\r\n                data.map((slide, slideIndex) => {\r\n                    return (\r\n                        <div\r\n                            style={{backgroundImage: `url(${slide.file})`}}\r\n                            key={`slide${slideIndex}`}\r\n                            className={classesCss.Slide}\r\n                        >\r\n                            <div className={classesCss.SliderWrap}>\r\n                                {\r\n                                    children.map((child, index) => {\r\n                                        return React.cloneElement(child,\r\n                                            {\r\n                                                value: slide[child.props.name],\r\n                                                key: `${child.props.name + slideIndex + index}`,\r\n                                                dataAttr: {...child.props.dataAttr, index:slideIndex},\r\n                                                onChange: onChangeHandler\r\n                                            })\r\n                                    })\r\n                                }\r\n                            </div>\r\n                            <button className={classesCss.RemoveButton}\r\n                                    onClick={() => onRemoveHandler(slideIndex)}>X\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                }) : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SliderForm","import React, {useState} from 'react'\r\nimport Textarea from \"../../Textarea\";\r\nimport Input from \"../../Input/Input\";\r\nimport classesCss from \"./SliderForm.module.scss\"\r\nimport SliderForm from \"./SliderForm\";\r\n\r\n\r\nconst SliderGallery = ({onChange, data}) => {\r\n\r\n    return (\r\n        <SliderForm\r\n            data={data}\r\n            onChange={onChange}\r\n        >\r\n            <Input\r\n                className={classesCss.Input}\r\n                name={\"file\"}\r\n                label={\"Photo: \"}\r\n            />\r\n            <Textarea\r\n                className={classesCss.Input}\r\n                name={\"description\"}\r\n                label={\"Description: \"}\r\n                rows={5}\r\n            />\r\n        </SliderForm>\r\n    )\r\n}\r\n\r\nexport default SliderGallery","import React from 'react'\r\n\r\n\r\nconst Select = ({name, value, onChange, options, label}) => {\r\n\r\n    if (!Array.isArray(options)) {\r\n        const optionsArr = []\r\n        for (let value in options) {\r\n            optionsArr.push({value, label: options[value]})\r\n        }\r\n        options = optionsArr\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <label>{label}</label>\r\n            <select\r\n                name={name}\r\n                onChange={onChange}\r\n                value={value}\r\n            >\r\n                {\r\n                    options.map((option) => {\r\n                        return <option key={Math.random()} value={option.value}>{option.label}</option>\r\n                    })\r\n                }\r\n            </select>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Select","import React from \"react\";\r\nimport Select from \"./Select\";\r\n\r\n\r\nconst SelectCountry = ({value, onChange, codes}) => {\r\n    if (codes) {\r\n        codes = codes.map((countryCode) => {\r\n            return ({value: countryCode, label: countryCode})\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <label>Country</label>\r\n            <Select\r\n                name=\"countryCode\"\r\n                value={value}\r\n                onChange={onChange}\r\n                options={codes}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SelectCountry","import React, {useContext, useState} from 'react'\r\nimport Input from \"../../components/Forms/Input/Input\";\r\nimport Button from \"../../components/Buttons/Button\";\r\nimport classesCss from \"./styles/AdminPage.module.scss\";\r\nimport Textarea from \"../../components/Forms/Textarea\";\r\nimport Column from \"../../components/Structs/Column\";\r\nimport Row from \"../../components/Structs/Row\";\r\nimport SliderGallery from \"../../components/Forms/Blocks/SliderForm/SliderGallery\";\r\nimport Select from \"../../components/Forms/Blocks/Select\";\r\nimport SelectCountry from \"../../components/Forms/Blocks/SelectCountry\";\r\nimport {AppContext} from \"../../context/AppContext\";\r\n\r\nconst CountryPageForm = ({sendHandler, waitCondition, countries, message}) => {\r\n\r\n    const {langSet} = useContext(AppContext)\r\n    const [form, setForm] = useState({\r\n        countryCode: countries ? countries.codes[0] : '',\r\n        lang: Object.keys(langSet)[0],\r\n        currencyCode: countries.data ? countries.data[Object.keys(countries.data)[0]].currencyCode : '',\r\n    })\r\n    const [countriesDataState, setCountriesData] = useState(countries.data)\r\n\r\n\r\n    const updateForm = event => {\r\n        setForm({...form, [event.target.name]: event.target.value})\r\n    }\r\n\r\n    const langDataChangeHandler = event => {\r\n        if (countriesDataState) {\r\n            const newCountriesData = {...countriesDataState}\r\n            newCountriesData[form.countryCode].langData[form.lang][event.target.name] = event.target.value\r\n            setCountriesData(newCountriesData)\r\n        }\r\n    }\r\n    const commonDataChangeHandler = event => {\r\n\r\n        if (countriesDataState) {\r\n            const newCountriesData = {...countriesDataState}\r\n            if (event.target.name === \"countryCoordinates\") {\r\n                newCountriesData[form.countryCode][event.target.name][event.target.dataset.coordinate] = event.target.value\r\n            } else {\r\n                newCountriesData[form.countryCode][event.target.name] = event.target.value\r\n            }\r\n\r\n            setCountriesData(newCountriesData)\r\n        }\r\n    }\r\n\r\n    const sliderChangeHandler = (photos) => {\r\n        if (photos) {\r\n            const newCountriesData = {...countriesDataState}\r\n            newCountriesData[form.countryCode].countryPhotos = photos\r\n            setCountriesData(newCountriesData)\r\n        }\r\n    }\r\n\r\n    const currentCountry = countriesDataState ? countriesDataState[form.countryCode] : undefined\r\n    const currentCountryLang = currentCountry ? currentCountry.langData[form.lang] : undefined\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Row>\r\n                <Column className={classesCss.FormColumn}>\r\n                    <Row style={{marginBottom: 0}}>\r\n                        <SelectCountry\r\n                            value={form.countryCode}\r\n                            onChange={updateForm}\r\n                            codes={countries.codes}\r\n                        />\r\n                        <Input\r\n                            blockStyle={{flexDirection: \"column\"}}\r\n                            label={\"Currency code: \"}\r\n                            name={\"currencyCode\"}\r\n                            value={form.currencyCode}\r\n                            onChange={updateForm}\r\n                        />\r\n                    </Row>\r\n                    <Select\r\n                        label={\"Language\"}\r\n                        name=\"lang\"\r\n                        onChange={updateForm}\r\n                        value={form.lang}\r\n                        options={langSet}\r\n                    />\r\n                    <Input\r\n                        label={\"Country Name: \"}\r\n                        name={\"countryName\"}\r\n                        value={currentCountryLang ? currentCountryLang.countryName || \"\" : \"\"}\r\n                        onChange={langDataChangeHandler}\r\n                    />\r\n                    <Input\r\n                        label={\"Capital Name: \"}\r\n                        name={\"capitalName\"}\r\n                        value={currentCountryLang ? currentCountryLang.capitalName || \"\" : \"\"}\r\n                        onChange={langDataChangeHandler}\r\n                    />\r\n                    <Input\r\n                        label={\"Currency: \"}\r\n                        name={\"currency\"}\r\n                        value={currentCountryLang ? currentCountryLang.currency || \"\" : \"\"}\r\n                        onChange={langDataChangeHandler}\r\n                    />\r\n                    <Button\r\n                        onClick={() => sendHandler({\r\n                            countryCode: form.countryCode,\r\n                            data: countriesDataState[form.countryCode]\r\n                        })}\r\n                        disabled={waitCondition}\r\n                        label={\"Update\"}\r\n                        className={[classesCss.SignUpButton, classesCss.FormButton].join(\" \")}\r\n                    />\r\n                    <br/>\r\n                    {message}\r\n                </Column>\r\n                <Column className={classesCss.FormColumn}>\r\n                    <Textarea\r\n                        label={\"Short text (in Mane Page): \"}\r\n                        name={\"shortText\"}\r\n                        value={currentCountryLang ? currentCountryLang.shortText || \"\" : \"\"}\r\n                        onChange={langDataChangeHandler}\r\n                    />\r\n                    <Textarea\r\n                        className={classesCss.Description}\r\n                        label={\"Description: \"}\r\n                        name={\"description\"}\r\n                        value={currentCountryLang ? currentCountryLang.description || \"\" : \"\"}\r\n                        onChange={langDataChangeHandler}\r\n                        rows={11}\r\n                    />\r\n                    <div className={classesCss.FormRow}>\r\n                        <Input\r\n                            label={\"Capital coordinate X: \"}\r\n                            name={\"countryCoordinates\"}\r\n                            dataAttr={{coordinate: 0}}\r\n                            value={currentCountry ? currentCountry.countryCoordinates[0] || \"\" : \"\"}\r\n                            onChange={commonDataChangeHandler}\r\n                        />\r\n                        <Input\r\n                            label={\"Capital coordinate Y: \"}\r\n                            name={\"countryCoordinates\"}\r\n                            dataAttr={{coordinate: 1}}\r\n                            value={currentCountry ? currentCountry.countryCoordinates[1] || \"\" : \"\"}\r\n                            onChange={commonDataChangeHandler}\r\n                        />\r\n                    </div>\r\n                </Column>\r\n                <Column className={classesCss.FormColumn}>\r\n                    <Input\r\n                        label={\"Preview: \"}\r\n                        name={\"preview\"}\r\n                        value={currentCountry ? currentCountry.preview : \"\"}\r\n                        onChange={commonDataChangeHandler}\r\n                    />\r\n                    {\r\n                        currentCountry?.preview ?\r\n                            <div className={classesCss.CountryPreview}>\r\n                                <img src={currentCountry.preview} alt=\"countryPreview\"/>\r\n                            </div> : null\r\n\r\n                    }\r\n                    <Input\r\n                        label={\"Video: \"}\r\n                        name={\"video\"}\r\n                        value={currentCountryLang ? currentCountryLang.video || \"\" : \"\"}\r\n                        onChange={langDataChangeHandler}\r\n                    />\r\n                </Column>\r\n            </Row>\r\n            <h3>Slider:</h3>\r\n            <Row>\r\n                <SliderGallery\r\n                    data={currentCountry ? currentCountry.countryPhotos : []}\r\n                    onChange={sliderChangeHandler}\r\n                />\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CountryPageForm","const dummyLang = {\r\n    lang: \"\",\r\n    countryName: \"\",\r\n    shortText: \"\",\r\n    capitalName: \"\",\r\n    preview: \"\",\r\n    countryPhotos:[],\r\n    countryRate: 0,\r\n    countryCoordinates: [],\r\n    currency: \"\",\r\n    description: \"\",\r\n    video: \"\"\r\n}\r\n\r\nexport function destructCountry(countryDataFromClient, dummy = dummyLang){\r\n    const countryStructure = {\r\n        ...countryDataFromClient.data,\r\n        langData: []\r\n    }\r\n    for(let lang in countryDataFromClient.data.langData){\r\n        if(countryDataFromClient.data.langData.hasOwnProperty(lang)){\r\n            const langData = {lang}\r\n            for(let dummyKey in dummy){\r\n                if(countryDataFromClient.data.langData[lang][dummyKey] !== undefined){\r\n                    langData[dummyKey] = countryDataFromClient.data.langData[lang][dummyKey]\r\n                }\r\n\r\n            }\r\n            countryStructure.langData.push(langData);\r\n        }\r\n    }\r\n\r\n    return {\r\n        countryData: countryStructure,\r\n    }\r\n}\r\n\r\nexport function structCountries(countriesDataFromServer){\r\n    const structure = {}\r\n    for(let i = 0; i < countriesDataFromServer.length; i++){\r\n\r\n        const countryCode = countriesDataFromServer[i].countryCode\r\n\r\n        structure[countryCode] = countriesDataFromServer[i]\r\n\r\n        const countryLangData = {};\r\n        for (let i = 0; i < structure[countryCode].langData.length; i++) {\r\n            countryLangData[structure[countryCode].langData[i].lang] = structure[countryCode].langData[i]\r\n        }\r\n        structure[countryCode].langData = countryLangData\r\n    }\r\n    return structure\r\n}\r\n\r\n","import React from 'react'\r\nimport Textarea from \"../../../components/Forms/Textarea\";\r\nimport Input from \"../../../components/Forms/Input/Input\";\r\nimport classesCss from './ShowplaceRepeater.module.scss'\r\n\r\n\r\nconst ShowplaceRepeater = ({addHandler, onChange, showplaces, currentLang, removeHandler}) => {\r\n\r\n    const getLangIndex = (langSet, currentLang) => {\r\n        return langSet.findIndex((langData) => {\r\n            return langData.lang === currentLang\r\n        })\r\n    }\r\n\r\n    const checkValue = (value) =>{\r\n        if(value === undefined) return \"\"\r\n        return value\r\n    }\r\n\r\n    return (\r\n        <div className={classesCss.ShowplaceRepeater}>\r\n            <div onClick={addHandler} className={classesCss.AddButton}>\r\n                Add showplace\r\n            </div>\r\n            {showplaces ?\r\n                showplaces.map((showplace, index) => {\r\n                    const langIndex = getLangIndex(showplace.langData, currentLang)\r\n                    return (\r\n                        <div key={index} className={classesCss.Item}>\r\n                            <div className={classesCss.PreviewEditor}\r\n                                 style={{backgroundImage: `url(${showplace.prevPhoto || \"\"})`}}>\r\n                                <Input\r\n                                    name={\"prevPhoto\"}\r\n                                    label={\"Preview: \"}\r\n                                    value={showplace.prevPhoto || \"\"}\r\n                                    dataAttr={{index: showplace._id || showplace.index }}\r\n                                    onChange={onChange}\r\n                                />\r\n                                <Input\r\n                                    name={\"name\"}\r\n                                    label={\"Name: \"}\r\n                                    value={checkValue(showplace.langData[langIndex].name)}\r\n                                    dataAttr={{\r\n                                        index: showplace._id || showplace.index,\r\n                                        key: \"lang\"}}\r\n                                    onChange={onChange}\r\n                                />\r\n                                <Textarea\r\n                                    className={classesCss.Input}\r\n                                    name={\"shortDescription\"}\r\n                                    label={\"Short description: \"}\r\n                                    rows={5}\r\n                                    value={checkValue(showplace.langData[langIndex].shortDescription)}\r\n                                    dataAttr={{\r\n                                        index: showplace._id || showplace.index,\r\n                                        key: \"lang\"\r\n                                    }}\r\n                                    onChange={onChange}\r\n                                />\r\n                            </div>\r\n                            <div className={classesCss.FullEditor}\r\n                                 style={{backgroundImage: `url(${showplace.fullPhoto || \"\"})`}}>\r\n                                <Input\r\n                                    className={classesCss.Input}\r\n                                    name={\"fullPhoto\"}\r\n                                    label={\"Photo: \"}\r\n                                    value={showplace.fullPhoto || \"\"}\r\n                                    onChange={onChange}\r\n                                    dataAttr={{index: showplace._id || showplace.index}}\r\n                                />\r\n                                <Textarea\r\n                                    className={classesCss.Input}\r\n                                    name={\"description\"}\r\n                                    label={\"Description: \"}\r\n                                    value={checkValue(showplace.langData[langIndex].description)}\r\n                                    dataAttr={{\r\n                                        index: showplace._id || showplace.index,\r\n                                        key: \"lang\"\r\n                                    }}\r\n                                    rows={8}\r\n                                    onChange={onChange}\r\n                                />\r\n                            </div>\r\n                            <button\r\n                                data-index={showplace.index}\r\n                                data-id={showplace._id}\r\n                                onClick={removeHandler}\r\n                                className={classesCss.RemoveButton}>X\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                }) : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ShowplaceRepeater","import React, {useContext, useEffect, useState} from 'react'\r\nimport Select from \"../../components/Forms/Blocks/Select\";\r\nimport SelectCountry from \"../../components/Forms/Blocks/SelectCountry\";\r\nimport ShowplaceRepeater from \"./ShowplaceRepeater/ShowplaceRepeater\";\r\nimport {AppContext} from \"../../context/AppContext\";\r\nimport Button from \"../../components/Buttons/Button\";\r\nimport classesCss from \"./styles/AdminPage.module.scss\";\r\n\r\n\r\nconst ShowplaceAddForm = ({showplaces, codes, sendHandler, message}) => {\r\n\r\n    const {langSet} = useContext(AppContext)\r\n\r\n    const [form, setForm] = useState({\r\n        countryCode: codes.length > 0 ? codes[0] : '',\r\n        lang: Object.keys(langSet)[0],\r\n    })\r\n    const [localShowplaces, setLocalShowplaces] = useState({\r\n        full: showplaces,\r\n        updateStack: [],\r\n        updatesCounter: 0\r\n    })\r\n\r\n    const updateForm = event => {\r\n        setForm({...form, [event.target.name]: event.target.value})\r\n    }\r\n\r\n\r\n    const addHandler = () => {\r\n        const showplacesFull = [...localShowplaces.full]\r\n        const showplacesUpdateStack = [...localShowplaces.updateStack]\r\n        const localCounter = localShowplaces.updatesCounter + 1;\r\n        const showplaceDummy = {\r\n            index: localCounter,\r\n            countryCode: form.countryCode,\r\n            langData: []\r\n        }\r\n        for (let lang in langSet) {\r\n            if (langSet.hasOwnProperty(lang))\r\n                showplaceDummy.langData.push({lang})\r\n        }\r\n        showplacesFull.unshift(showplaceDummy)\r\n        showplacesUpdateStack.push({index: localCounter})\r\n        setLocalShowplaces({\r\n            full: showplacesFull,\r\n            updateStack: showplacesUpdateStack,\r\n            updatesCounter: localCounter\r\n        })\r\n    }\r\n\r\n    const removeHandler = event => {\r\n        const index = Number(event.target.dataset.index)\r\n        const id = event.target.dataset.id\r\n        const showplacesFull = [...localShowplaces.full]\r\n        const updateStack = [...localShowplaces.updateStack]\r\n        const indexToRemove = showplacesFull.findIndex((checkShowplace) => {\r\n            return id ? checkShowplace._id === id :\r\n                index >= 0? checkShowplace.index === index : false\r\n        })\r\n\r\n        if (index) {\r\n            const indexToRemoveFromStack = updateStack.findIndex((stackShowplace) => {\r\n                return index === stackShowplace.index\r\n            })\r\n            updateStack.splice(indexToRemoveFromStack, 1)\r\n        } else if (id) {\r\n            const indexToRemoveFromStack = updateStack.findIndex((stackShowplace) => {\r\n                return id === stackShowplace._id\r\n            })\r\n            if (indexToRemoveFromStack > -1) {\r\n                updateStack.splice(indexToRemoveFromStack, 1)\r\n            }\r\n            updateStack.push({_id: id, key: \"remove\"})\r\n        }\r\n        if(indexToRemove>=0) showplacesFull.splice(indexToRemove, 1)\r\n\r\n        setLocalShowplaces({\r\n            ...localShowplaces,\r\n            full: showplacesFull,\r\n            updateStack: updateStack,\r\n        })\r\n    }\r\n\r\n    const updateStackHandler = (showplace) => {\r\n        const updateStack = [...localShowplaces.updateStack]\r\n\r\n        const showplaceInUpdateStack = updateStack.findIndex((checkShowplace) => {\r\n            return checkShowplace._id ? showplace._id === checkShowplace._id :\r\n                checkShowplace.index? checkShowplace.index === showplace.index : false\r\n        })\r\n        if (showplaceInUpdateStack === -1) {\r\n            showplace.index ? updateStack.push({index: showplace.index}) : updateStack.push({_id: showplace._id})\r\n        }\r\n        return updateStack\r\n    }\r\n\r\n    const onChangeHandler = (event) => {\r\n        const showplacesFull = [...localShowplaces.full]\r\n\r\n        const currentShowplace = showplacesFull.find((showplace) => {\r\n            return showplace.index === Number(event.target.dataset.index) || showplace._id === event.target.dataset.index\r\n        })\r\n\r\n        if (event.target.dataset.key === \"lang\") {\r\n            const langIndex = currentShowplace.langData.findIndex((lang) => {\r\n                return lang.lang === form.lang\r\n            })\r\n            currentShowplace.langData[langIndex][event.target.name] = event.target.value\r\n        } else {\r\n            currentShowplace[event.target.name] = event.target.value\r\n        }\r\n\r\n        const updateStack = updateStackHandler(currentShowplace)\r\n        setLocalShowplaces({\r\n            full: showplacesFull,\r\n            updateStack: updateStack,\r\n            updatesCounter: localShowplaces.updatesCounter\r\n        })\r\n    }\r\n\r\n    const sendHandlerWrap = () => {\r\n        sendHandler(localShowplaces.full, localShowplaces.updateStack)\r\n        setLocalShowplaces({...localShowplaces, updateStack: []})\r\n    }\r\n\r\n    const getCurrentShowplaces = () => {\r\n        if(localShowplaces.full){\r\n            return localShowplaces.full.filter((showplace) => {\r\n                return showplace.countryCode === form.countryCode\r\n            })\r\n        }\r\n        return []\r\n    }\r\n\r\n    useEffect(() => {\r\n        setForm({...form, countryCode: codes[0]})\r\n    }, [codes])\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                onClick={sendHandlerWrap}\r\n                label={\"Update\"}\r\n                className={[classesCss.SignUpButton, classesCss.FormButton].join(\" \")}\r\n            />{message}<br/>\r\n            <Select\r\n                label={\"Language\"}\r\n                name=\"lang\"\r\n                onChange={updateForm}\r\n                value={form.lang}\r\n                options={langSet}\r\n            />\r\n            <SelectCountry\r\n                value={form.countryCode || codes[0]}\r\n                onChange={updateForm}\r\n                codes={codes}\r\n            />\r\n            <ShowplaceRepeater\r\n                showplaces={getCurrentShowplaces()}\r\n                addHandler={addHandler}\r\n                onChange={onChangeHandler}\r\n                removeHandler={removeHandler}\r\n                currentLang={form.lang}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ShowplaceAddForm","import React, {useEffect, useState} from 'react'\r\nimport {useHttp, useCountries} from \"../../hooks/useHttp\";\r\nimport TabPanel from \"../../components/Tabs/TabPanel\";\r\nimport VerticalTabs from \"../../components/Tabs/VerticalTabs\";\r\nimport CountryAddForm from \"./CountryAddForm\";\r\nimport CountryPageForm from \"./CountryPageForm\";\r\nimport {destructCountry, structCountries} from \"../../helpers/struct\"\r\nimport classesCss from './styles/AdminPage.module.scss'\r\nimport ShowplaceAddForm from \"./ShowplaceAddForm\";\r\n\r\n\r\nconst AdminPage = () => {\r\n    const {request, loading} = useHttp()\r\n    const {getCountryFromBase, countryResponse, cLoading} = useCountries()\r\n    const [message, setMessage] = useState('')\r\n    const [countries, setCountries] = useState({\r\n        data: null,\r\n        codes: [],\r\n        showplaces: []\r\n    })\r\n\r\n    const addCountryHandler = async (form) => {\r\n        try {\r\n            const data = await request('/api/country/add', 'POST', {...form})\r\n            setMessage(data.message || '')\r\n            const countriesUpd = {...countries}\r\n            countriesUpd.codes.push(form.countryCode)\r\n            setCountries(countriesUpd)\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n    const updateCountryHandler = async form => {\r\n        try {\r\n            const data = await request('/api/country/update', 'POST', destructCountry(form))\r\n            setMessage(data.message || '')\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n    const sendShowplacesHandler = async (showplaces, placesStack) => {\r\n        const requestQueue = []\r\n        placesStack.forEach((stackItem) => {\r\n            if(stackItem.key === \"remove\"){\r\n                requestQueue.push(stackItem)\r\n            } else {\r\n                const updatedShowplace = showplaces.find((place) => {\r\n                    return stackItem._id ? place._id === stackItem._id :\r\n                        stackItem.index? place.index === stackItem.index : false\r\n                })\r\n                if(updatedShowplace){\r\n                    requestQueue.push(updatedShowplace)\r\n                }\r\n            }\r\n        })\r\n\r\n        try {\r\n            const sendRes = await request('/api/country/showplace', 'POST', {showplaces: requestQueue})\r\n            const getRes = await request('/api/country/get', 'POST', {key:\"showplaces\"})\r\n            setMessage(sendRes.message || '')\r\n            setCountries({...countries, showplaces:getRes.showplaces})\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n    const removeCountryHandler = async countryCode => {\r\n        try {\r\n            const localCountriesUpdate = {...countries.data}\r\n            if (countryCode in localCountriesUpdate) {\r\n                const data = await request('/api/country/remove', 'POST', {countryCode})\r\n                setMessage(data.message || '')\r\n                delete localCountriesUpdate[countryCode]\r\n                setCountries(localCountriesUpdate)\r\n            }\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (countryResponse) {\r\n            const struct = structCountries(countryResponse.countries)\r\n            const codes = []\r\n            for (let countryCode in struct) {\r\n                if (struct.hasOwnProperty(countryCode)) {\r\n                    codes.push(countryCode)\r\n                }\r\n            }\r\n            setCountries({\r\n                data: struct,\r\n                codes,\r\n                showplaces: countryResponse.showplaces ? countryResponse.showplaces : []\r\n            })\r\n        }\r\n    }, [countryResponse])\r\n\r\n    useEffect(() => {\r\n        getCountryFromBase({key: 'all'})\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className={classesCss.AdminPage}>\r\n            <VerticalTabs>\r\n                <TabPanel className={classesCss.FormStyle1} label={\"Add Country\"}>\r\n                    <CountryAddForm\r\n                        waitCondition={loading}\r\n                        sendHandler={addCountryHandler}\r\n                        removeHandler={removeCountryHandler}\r\n                        countriesCodes={countries.codes}\r\n                        message={message}\r\n                    />\r\n                </TabPanel>\r\n                <TabPanel className={classesCss.FormStyle1} label={\"Countries manager\"}>\r\n                    {\r\n                        !countryResponse ? cLoading ?\r\n                            <div>Loading...</div> :\r\n                            <div>Showplaces data loading error</div> :\r\n                            <CountryPageForm\r\n                                waitCondition={loading}\r\n                                sendHandler={updateCountryHandler}\r\n                                countries={countries}\r\n                                message={message}\r\n                            />\r\n                    }\r\n                </TabPanel>\r\n                <TabPanel className={classesCss.FormStyle1} label={\"Showplaces manager\"}>\r\n                    {\r\n                        !countryResponse ? cLoading ?\r\n                            <div>Loading...</div> :\r\n                            <div>Showplaces data loading error</div> :\r\n                            <ShowplaceAddForm\r\n                                codes={countries.codes}\r\n                                showplaces={countries.showplaces}\r\n                                sendHandler={sendShowplacesHandler}\r\n                                message={message}\r\n                            />\r\n                    }\r\n                </TabPanel>\r\n            </VerticalTabs>\r\n        </div>)\r\n}\r\n\r\n\r\nexport default AdminPage\r\n","import React from \"react\";\r\nimport classesCss from \"./Search.module.scss\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport const Search = ({\r\n  value,\r\n  updateSearch,\r\n  className,\r\n  placeholderValue,\r\n    classes,\r\n  setIsSearching,\r\n}) => {\r\n  const onSearchValueChange = (e) => {\r\n    updateSearch({ value: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setIsSearching(true);\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      setIsSearching(true);\r\n    }\r\n  };\r\n\r\n  const buttonStyle = {\r\n    visibility: \"hidden\",\r\n    opacity: 0,\r\n    transition: \"visibility linear .3s, opacity .3s\",\r\n  };\r\n  if (value) {\r\n    buttonStyle.visibility = \"visible\";\r\n    buttonStyle.opacity = 1;\r\n    buttonStyle.transition = \"visibility linear 0s, opacity .5s\";\r\n  }\r\n  return (\r\n    <form className={className} onSubmit={handleSubmit}>\r\n      <button className={classes.searchButton} style={buttonStyle} type=\"submit\">\r\n        <FontAwesomeIcon icon={faSearch} />\r\n      </button>\r\n      <input\r\n        onChange={onSearchValueChange}\r\n        value={value}\r\n        placeholder={placeholderValue}\r\n        autoFocus={true}\r\n        onKeyDown={handleKeyDown}\r\n      />\r\n\r\n      <button className={classes.closeButton} style={buttonStyle} onClick={() => updateSearch({ value: \"\" })}>\r\n        <svg\r\n          className={classesCss.TimesSymbol}\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 120 120\"\r\n        >\r\n          <path\r\n            stroke=\"black\"\r\n            strokeWidth=\"8.3\"\r\n            strokeLinecap=\"round\"\r\n            d=\"M14,14 L106,106 M106,14 L14,106\"\r\n          />\r\n        </svg>\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Select from 'react-styled-select'\r\nimport './select.scss'\r\n\r\n\r\nexport const SelectLanguage = ({\r\n                                   language,\r\n                                   setLanguage,\r\n                                   className,\r\n                                   classes\r\n                               }) => {\r\n    const languages = [\r\n        {value: 'EN', label: 'EN'},\r\n        {value: 'RU', label: 'RU'},\r\n        {value: 'FR', label: 'FR'},\r\n    ];\r\n\r\n    const handleChange = (val) => {\r\n        setLanguage(val);\r\n        localStorage.setItem(\"lang\", val);\r\n    };\r\n\r\n\r\n    return (\r\n        <Select\r\n            value={language}\r\n            onChange={handleChange}\r\n            className={className}\r\n            searchable={false}\r\n            options={languages}\r\n            classes={{\r\n                selectControl: classes.control,\r\n                selectMenuOuter: classes.dropdown,\r\n                selectInput: classes.input,\r\n                selectPlaceholder: classes.placeholder\r\n            }}\r\n        />\r\n    );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/rs_school_js.ad178c0d.svg\";","import React, { useState, useEffect } from \"react\";\r\nimport { useAuth } from \"./hooks/useAuth\";\r\nimport { AppContext } from \"./context/AppContext\";\r\nimport { Route, Switch, NavLink } from \"react-router-dom\";\r\nimport MainPage from \"./pages/MainPage/MainPage\";\r\nimport {CountryPage} from \"./pages/CountryPage\";\r\nimport AuthPage from \"./pages/AuthPage\";\r\nimport UserPage from \"./pages/UserPage\";\r\nimport NavBar from \"./components/Navigation/NavBar\";\r\nimport UserBar from \"./components/Navigation/UserBar\";\r\nimport AdminPage from \"./pages/AdminPage/AdminPage\";\r\nimport { Search } from \"./components/Search/Search\";\r\nimport { useCountries } from \"./hooks/useHttp\";\r\nimport { SelectLanguage } from \"./components/SelectLanguage/SelectLanguage\";\r\nimport classesCss from \"./styles/App.module.scss\";\r\nimport logo from \"./images/rs_school_js.svg\"\r\n\r\nconst langSet = {\r\n  EN: \"English\",\r\n  RU: \"Russian\",\r\n  FR: \"France\",\r\n};\r\n\r\nconst langExtraData = {\r\n  EN: {\r\n    placeholder: \"Search country\",\r\n    signIn: \"Sign in\",\r\n    logOut: \"Log out\",\r\n    logIn: \"Login\",\r\n    password: \"Password\",\r\n    signInConfirm: \"Sign In\",\r\n    signUpConfirm: \"Sign Up\",\r\n  },\r\n  RU: {\r\n    placeholder: \"ÐÐ°Ð¹ÑÐ¸ ÑÑÑÐ°Ð½Ñ\",\r\n    signIn: \"ÐÑÐ¾Ð´\",\r\n    logOut: \"ÐÑÑÐ¾Ð´\",\r\n    logIn: \"ÐÐ¾Ð³Ð¸Ð½\",\r\n    password: \"ÐÐ°ÑÐ¾Ð»Ñ\",\r\n    signInConfirm: \"ÐÐ¾Ð¹ÑÐ¸\",\r\n    signUpConfirm: \"ÐÐ°ÑÐµÐ³Ð¸ÑÑÑÐ¸ÑÐ¾Ð²Ð°ÑÑÑÑ\",\r\n  },\r\n  FR: {\r\n    placeholder: \"Rechercher un pays\",\r\n    signIn: \"S'identifier\",\r\n    logOut: \"Se dÃ©connecter\",\r\n    logIn: \"Login\",\r\n    password: \"Le mot de passe\",\r\n    signInConfirm: \"Se connecter\",\r\n    signUpConfirm: \"S'inscrire\",\r\n  },\r\n};\r\n\r\n\r\nfunction App() {\r\n  const { token, login, logout, userId, userData, updateData} = useAuth();\r\n  const [searchbarState, setSearchbarState] = useState({\r\n    value: \"\",\r\n    exists: false,\r\n  });\r\n  const { getCountryFromBase, countryResponse } = useCountries();\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const [language, setLanguage] = useState(\r\n    localStorage.getItem(\"lang\") || \"EN\"\r\n  );\r\n\r\n  const isAuthenticated = !!token;\r\n\r\n    const updateSearch = (update) => {\r\n        const newState = {\r\n            ...searchbarState,\r\n            ...update,\r\n        };\r\n        setSearchbarState(newState);\r\n    };\r\n\r\n    const getCountryPathName = (country) => {\r\n        const engIndex = country.langData.findIndex((lang) => {\r\n            return lang.lang === \"EN\";\r\n        });\r\n        return (\r\n            \"/country/\" +\r\n            country.langData[engIndex].countryName.toLowerCase().replace(/[-\\s]/, \"_\")\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        getCountryFromBase({});\r\n    }, [getCountryFromBase]);\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        token,\r\n        login,\r\n        logout,\r\n        userId,\r\n        userData,\r\n        updateData,\r\n        isAuthenticated,\r\n        language,\r\n        langSet,\r\n      }}\r\n    >\r\n      <div className={classesCss.Body}>\r\n        <NavBar classes={classesCss.SiteNavBar}>\r\n          <NavLink className={classesCss.LogoLink} to={\"/\"} exact>\r\n            <div className={classesCss.Logo}>GO TRAVEL!</div>\r\n          </NavLink>\r\n\r\n          {searchbarState.exists && (\r\n            <Search\r\n              className={classesCss.SearchBar}\r\n              classes={{\r\n                searchButton: classesCss.SearchButton,\r\n                closeButton: classesCss.CloseButton\r\n              }}\r\n              value={searchbarState.value}\r\n              updateSearch={updateSearch}\r\n              placeholderValue={langExtraData[language].placeholder}\r\n              isSearching={isSearching}\r\n              setIsSearching={setIsSearching}\r\n            />\r\n          )}\r\n\r\n          <SelectLanguage\r\n            countryResponse={countryResponse}\r\n            language={language}\r\n            setLanguage={setLanguage}\r\n            className={classesCss.SelectLanguage}\r\n            classes={{\r\n              menuItem: classesCss.LangMenuItem,\r\n              dropdown: classesCss.LangMenuDropdown,\r\n              control: classesCss.LangMenuControl,\r\n              //input: classesCss.LangMenuControl,\r\n            }}\r\n          />\r\n          <UserBar\r\n              classes={{\r\n                wrap: classesCss.UserBar,\r\n                logButton: classesCss.LogButton,\r\n                avatar: classesCss.Avatar\r\n              }}\r\n            langExtraData={langExtraData[language]}\r\n          />\r\n        </NavBar>\r\n        <div className={classesCss.SiteContent}>\r\n          <Switch>\r\n            <Route path=\"/admin\" exact>\r\n              <AdminPage />\r\n            </Route>\r\n\r\n            {countryResponse\r\n              ? countryResponse.countries.map((country, index) => {\r\n                  return (\r\n                    <Route\r\n                      key={`countryPageIndex${index}`}\r\n                      path={getCountryPathName(country)}\r\n                      exact\r\n                    >\r\n                      <CountryPage\r\n                        country={country}\r\n                        updateSearch={updateSearch}\r\n                      />\r\n                    </Route>\r\n                  )\r\n                }) : null\r\n            }\r\n            {\r\n              isAuthenticated ?\r\n                  <Route path=\"/user\" exact>\r\n                    <UserPage\r\n                        updateSearch={updateSearch}\r\n                    />\r\n                  </Route> :\r\n                  <Route path=\"/login\" exact>\r\n                    <AuthPage\r\n                        updateSearch={updateSearch}\r\n                        langExtraData={langExtraData[language]}\r\n                    />\r\n                  </Route>\r\n            }\r\n            <Route path=\"/\" exact>\r\n              <MainPage\r\n                  searchValue={searchbarState.value}\r\n                  setSearchExists={updateSearch}\r\n                  countryResponse={countryResponse}\r\n                  language={language}\r\n                  isSearching={isSearching}\r\n                  setIsSearching={setIsSearching}\r\n              />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n        <div className={classesCss.Footer}>\r\n          <div className=\"Footer__authors Authors\">\r\n            <ul className=\"Authors__list\">\r\n              <h2 className=\"Authors__title\">ÐÐ²ÑÐ¾ÑÑ</h2>\r\n              <li className=\"Authors__item\">\r\n                <a href=\"https://github.com/heyheyjude\" className=\"Authors__link\">ÐÐ½ÑÐ¾Ð½</a>\r\n              </li>\r\n              <li className=\"Authors__item\">\r\n                <a href=\"http://github.com/ivan-scherbuk\" className=\"Authors__link\">ÐÐ²Ð°Ð½</a>\r\n              </li>\r\n              <li className=\"Authors__item\">\r\n                <a href=\"https://github.com/Safwood?tab=repositories\" className=\"Authors__link\">ÐÐ½Ð°ÑÑÐ°ÑÐ¸Ñ</a>\r\n              </li>\r\n              <li className=\"Authors__item\">\r\n                <a href=\"https://github.com/pannage\" className=\"Authors__link\">Ð¢Ð°ÑÑÑÐ½Ð°</a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n            <div>\r\n                <div className={classesCss.FooterDate}>2021 Ð³.</div>\r\n                <div  className={classesCss.FooterLogo}>\r\n\r\n            </div>\r\n\r\n            <a href=\"https://rs.school\" className=\"Footer__link\" ><img src={logo} className=\"Footer__img\"/></a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst application = (\r\n    <HashRouter basename={\"/\"}>\r\n        <App />\r\n    </HashRouter>\r\n)\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      {application}\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AuthPage\":\"AuthPage_AuthPage__n7mVp\",\"AuthForm\":\"AuthPage_AuthForm__1K-Gr\",\"FormMessage\":\"AuthPage_FormMessage__2Xi3-\",\"AuthInput\":\"AuthPage_AuthInput__1wvqm\",\"AuthButtonSet\":\"AuthPage_AuthButtonSet__2JCha\",\"FormButton\":\"AuthPage_FormButton__2DDF3\",\"SignUpButton\":\"AuthPage_SignUpButton__3m-xC\",\"SignInButton\":\"AuthPage_SignInButton__3QLpV\",\"UserPage\":\"AuthPage_UserPage__IeeDD\",\"SaveButton\":\"AuthPage_SaveButton__FGJBw\",\"ImageLoadButton\":\"AuthPage_ImageLoadButton__2PsgI\",\"ImageHandler\":\"AuthPage_ImageHandler__24sC3\",\"NameInput\":\"AuthPage_NameInput__31e3s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ShowplaceRepeater\":\"ShowplaceRepeater_ShowplaceRepeater__zB64_\",\"AddButton\":\"ShowplaceRepeater_AddButton__1o-ie\",\"Item\":\"ShowplaceRepeater_Item__3BUpa\",\"PreviewEditor\":\"ShowplaceRepeater_PreviewEditor__2hmQZ\",\"FullEditor\":\"ShowplaceRepeater_FullEditor__bpzGL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Slider\":\"SliderForm_Slider__hmtkd\",\"AddButton\":\"SliderForm_AddButton__nPCvF\",\"Input\":\"SliderForm_Input__1x83I\",\"Slide\":\"SliderForm_Slide__1Secw\",\"SliderWrap\":\"SliderForm_SliderWrap__2J8RD\",\"RemoveButton\":\"SliderForm_RemoveButton__17RpP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Slide\":\"Slider_Slide__4mBYH\",\"ShowplaceSlide\":\"Slider_ShowplaceSlide__2klvv\",\"ShortDescription\":\"Slider_ShortDescription__3tDhM\",\"Rating\":\"Slider_Rating__3n_ju\",\"RateNumber\":\"Slider_RateNumber__g9ydc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RateCard\":\"RateCard_RateCard__3yutO\",\"RateRecord\":\"RateCard_RateRecord__2Q4l3\",\"Avatar\":\"RateCard_Avatar__38FX5\",\"UserName\":\"RateCard_UserName__3FMes\",\"Rate\":\"RateCard_Rate__3-v4y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainPage\":\"MainPage_MainPage__2XQu_\",\"Layer\":\"MainPage_Layer__3YbmG\",\"CountryCardPhoto\":\"MainPage_CountryCardPhoto__2WjBm\",\"CountryCard\":\"MainPage_CountryCard__2CVG_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Row\":\"Structs_Row__3l_w9\",\"Column\":\"Structs_Column__MoDZq\"};"],"sourceRoot":""}